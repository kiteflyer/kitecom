a:2:{s:4:"meta";a:3:{s:5:"title";s:16:"datamints_feuser";s:5:"descr";s:40:"A extension for frontend user mangement.";s:7:"options";a:2:{s:10:"usageCount";s:1:"1";s:19:"includeCodeAbstract";s:1:"1";}}s:5:"files";a:4:{s:14:"MD5_bdff62bd93";a:5:{s:8:"filename";s:41:"lib/class.tx_datamintsfeuser_flexform.php";s:8:"filesize";i:2306;s:6:"header";a:5:{s:4:"text";s:86:"

Class 'tx_datamintsfeuser_flexform' which gets all field names from the "fe_users".
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}s:5:"other";a:3:{i:0;s:54:"@author	Bernhard baumgartl <b.baumgartl@datamints.com>";i:1;s:14:"@package	TYPO3";i:2;s:30:"@subpackage	tx_datamintsfeuser";}s:11:"other_index";a:3:{s:7:"@author";a:1:{i:0;s:46:"Bernhard baumgartl <b.baumgartl@datamints.com>";}s:8:"@package";a:1:{i:0;s:6:"TYPO3 ";}s:11:"@subpackage";a:1:{i:0;s:19:"tx_datamintsfeuser ";}}}s:3:"DAT";a:2:{i:1;a:5:{s:6:"header";s:35:"class tx_datamintsfeuser_flexform {";s:5:"class";i:1;s:11:"parentClass";s:27:"tx_datamintsfeuser_flexform";s:4:"cDat";a:5:{s:4:"text";s:86:"

Class 'tx_datamintsfeuser_flexform' which gets all field names from the "fe_users".
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}s:5:"other";a:3:{i:0;s:54:"@author	Bernhard baumgartl <b.baumgartl@datamints.com>";i:1;s:14:"@package	TYPO3";i:2;s:30:"@subpackage	tx_datamintsfeuser";}s:11:"other_index";a:3:{s:7:"@author";a:1:{i:0;s:46:"Bernhard baumgartl <b.baumgartl@datamints.com>";}s:8:"@package";a:1:{i:0;s:6:"TYPO3 ";}s:11:"@subpackage";a:1:{i:0;s:19:"tx_datamintsfeuser ";}}}s:6:"atLine";i:44;}i:3;a:7:{s:6:"header";s:33:"function getFieldNames($config) {";s:11:"parentClass";s:27:"tx_datamintsfeuser_flexform";s:4:"cDat";a:3:{s:4:"text";s:98:"

The getFields method is used to get the "fe_users" field names into the flexform of the plugin.
";s:5:"param";a:1:{i:0;a:2:{i:0;s:5:"array";i:1;s:29:"$config: The fields selected.";}}s:6:"return";a:2:{i:0;s:5:"array";i:1;s:7:"$config";}}s:7:"content";a:2:{i:0;s:507:"		// Damit $TCA hier zur Verfuegung steht.
		global $TCA;

		// $TCA-Teil laden. Damit koennen wir alle Felder durchgehen.
		t3lib_div::loadTCA('fe_users');

		$fieldList = array();

		foreach ($TCA['fe_users']['columns'] as $key => $_){
			$fieldList[] = array($key, $key);
		}

		$config['items'] = array_merge($config['items'], $fieldList);

		return $config;
	}

}

if (d
[...]
include_once($TYPO3_CONF_VARS[TYPO3_MODE]['XCLASS']['ext/datamints_feuser/lib/class.tx_datamintsfeuser_flexform.php']);
}

?>";i:1;i:1;}s:12:"content_size";i:633;s:13:"content_lines";i:23;s:6:"atLine";i:52;}}s:10:"usageCount";a:2:{s:12:"H_bc78dc17ad";a:2:{s:24:"_searchtime_milliseconds";d:13;s:15:"_functionHeader";s:35:"class tx_datamintsfeuser_flexform {";}s:12:"H_f8248cbb61";a:2:{s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:33:"function getFieldNames($config) {";}}}s:14:"MD5_d945c5944b";a:5:{s:8:"filename";s:43:"lib/class.tx_datamintsfeuser_salesforce.php";s:8:"filesize";i:2900;s:6:"header";a:5:{s:4:"text";s:61:"

Library 'Salesforce' for the 'datamints_feuser' extension.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}s:5:"other";a:3:{i:0;s:54:"@author	Bernhard Baumgartl <b.baumgartl@datamints.com>";i:1;s:14:"@package	TYPO3";i:2;s:30:"@subpackage	tx_datamintsfeuser";}s:11:"other_index";a:3:{s:7:"@author";a:1:{i:0;s:46:"Bernhard Baumgartl <b.baumgartl@datamints.com>";}s:8:"@package";a:1:{i:0;s:6:"TYPO3 ";}s:11:"@subpackage";a:1:{i:0;s:19:"tx_datamintsfeuser ";}}}s:3:"DAT";a:2:{i:1;a:5:{s:6:"header";s:37:"class tx_datamintsfeuser_salesforce {";s:5:"class";i:1;s:11:"parentClass";s:29:"tx_datamintsfeuser_salesforce";s:4:"cDat";a:5:{s:4:"text";s:61:"

Library 'Salesforce' for the 'datamints_feuser' extension.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}s:5:"other";a:3:{i:0;s:54:"@author	Bernhard Baumgartl <b.baumgartl@datamints.com>";i:1;s:14:"@package	TYPO3";i:2;s:30:"@subpackage	tx_datamintsfeuser";}s:11:"other_index";a:3:{s:7:"@author";a:1:{i:0;s:46:"Bernhard Baumgartl <b.baumgartl@datamints.com>";}s:8:"@package";a:1:{i:0;s:6:"TYPO3 ";}s:11:"@subpackage";a:1:{i:0;s:19:"tx_datamintsfeuser ";}}}s:6:"atLine";i:44;}i:3;a:7:{s:6:"header";s:31:"function main($params, $pObj) {";s:11:"parentClass";s:29:"tx_datamintsfeuser_salesforce";s:4:"cDat";a:3:{s:4:"text";s:136:"

Maps the typo3 fields to the salesforce fields and submits it to salesforce.
This will only done if the user is completely activated!
";s:5:"param";a:2:{i:0;a:2:{i:0;s:5:"array";i:1;s:7:"$params";}i:1;a:2:{i:0;s:6:"object";i:1;s:5:"$pObj";}}s:6:"return";a:2:{i:0;s:4:"null";i:1;s:0:"";}}s:7:"content";a:2:{i:0;s:507:"		if ($GLOBALS['userAlreadyAddedToSalesforceInThisSession']) {
			return;
		}

		if (!$pObj->conf['salesforce.']['enable'] || !$pObj->conf['salesforce.']['oid']) {
			return;
		}

		if ($params['variables']['markerArray']['tx_datamintsfeuser_approval_level'] > 0) {
			return;
		}

		$fields = array(
			'oid' => $pObj->conf['salesforce.']['oid']
		);

		foreach ($pObj->conf
[...]
clude_once($TYPO3_CONF_VARS[TYPO3_MODE]['XCLASS']['ext/datamints_feuser/lib/class.tx_datamintsfeuser_salesforce.php']);
}

?>";i:1;i:1;}s:12:"content_size";i:1273;s:13:"content_lines";i:47;s:6:"atLine";i:54;}}s:10:"usageCount";a:2:{s:12:"H_32c2929e28";a:2:{s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:37:"class tx_datamintsfeuser_salesforce {";}s:12:"H_10986cfa77";a:2:{s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:31:"function main($params, $pObj) {";}}}s:14:"MD5_850248a7ec";a:5:{s:8:"filename";s:38:"lib/class.tx_datamintsfeuser_utils.php";s:8:"filesize";i:17962;s:6:"header";a:5:{s:4:"text";s:56:"

Library 'Utils' for the 'datamints_feuser' extension.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}s:5:"other";a:3:{i:0;s:54:"@author	Bernhard Baumgartl <b.baumgartl@datamints.com>";i:1;s:14:"@package	TYPO3";i:2;s:30:"@subpackage	tx_datamintsfeuser";}s:11:"other_index";a:3:{s:7:"@author";a:1:{i:0;s:46:"Bernhard Baumgartl <b.baumgartl@datamints.com>";}s:8:"@package";a:1:{i:0;s:6:"TYPO3 ";}s:11:"@subpackage";a:1:{i:0;s:19:"tx_datamintsfeuser ";}}}s:3:"DAT";a:21:{i:1;a:8:{s:6:"header";s:32:"class tx_datamintsfeuser_utils {";s:5:"class";i:1;s:11:"parentClass";s:24:"tx_datamintsfeuser_utils";s:4:"cDat";a:5:{s:4:"text";s:56:"

Library 'Utils' for the 'datamints_feuser' extension.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}s:5:"other";a:3:{i:0;s:54:"@author	Bernhard Baumgartl <b.baumgartl@datamints.com>";i:1;s:14:"@package	TYPO3";i:2;s:30:"@subpackage	tx_datamintsfeuser";}s:11:"other_index";a:3:{s:7:"@author";a:1:{i:0;s:46:"Bernhard Baumgartl <b.baumgartl@datamints.com>";}s:8:"@package";a:1:{i:0;s:6:"TYPO3 ";}s:11:"@subpackage";a:1:{i:0;s:19:"tx_datamintsfeuser ";}}}s:7:"content";a:2:{i:0;s:3:"

	";i:1;i:-1;}s:12:"content_size";i:3;s:13:"content_lines";i:2;s:6:"atLine";i:63;}i:3;a:7:{s:6:"header";s:37:"function getFeUsersTca($feUsersTca) {";s:11:"parentClass";s:24:"tx_datamintsfeuser_utils";s:4:"cDat";a:3:{s:4:"text";s:85:"

Ueberschreibt eventuell vorhandene TCA Konfiguration mit TypoScript Konfiguration.
";s:5:"param";a:1:{i:0;a:2:{i:0;s:5:"array";i:1;s:11:"$feUsersTca";}}s:6:"return";a:2:{i:0;s:5:"array";i:1;s:17:"$globalFeUsersTca";}}s:7:"content";a:2:{i:0;s:308:"		$GLOBALS['TSFE']->includeTCA();
		$globalFeUsersTca = $GLOBALS['TCA']['fe_users'];

		if ($feUsersTca) {
			$globalFeUsersTca['columns'] = t3lib_div::array_merge_recursive_overrule((array)$globalFeUsersTca['columns'], (array)t3lib_div::removeDotsFromTS($feUsersTca));
		}

		return $globalFeUsersTca;
	}

	";i:1;i:0;}s:12:"content_size";i:308;s:13:"content_lines";i:10;s:6:"atLine";i:72;}i:5;a:7:{s:6:"header";s:43:"function getStoragePageId($storagePageId) {";s:11:"parentClass";s:24:"tx_datamintsfeuser_utils";s:4:"cDat";a:3:{s:4:"text";s:78:"

Ermittelt die General Record Storage Pid, falls keine Pid uebergeben wurde.
";s:5:"param";a:1:{i:0;a:2:{i:0;s:7:"integer";i:1;s:14:"$storagePageId";}}s:6:"return";a:2:{i:0;s:7:"integer";i:1;s:11:"$storagePid";}}s:7:"content";a:2:{i:0;s:184:"		if (!$storagePageId) {
			$arrayRootPids = $GLOBALS['TSFE']->getStorageSiterootPids();
			$storagePageId = $arrayRootPids['_STORAGE_PID'];
		}

		return intval($storagePageId);
	}

	";i:1;i:0;}s:12:"content_size";i:184;s:13:"content_lines";i:8;s:6:"atLine";i:89;}i:7;a:7:{s:6:"header";s:60:"function getTypoLinkUrl($params, $urlParameters = array()) {";s:11:"parentClass";s:24:"tx_datamintsfeuser_utils";s:4:"cDat";a:3:{s:4:"text";s:53:"

Ermittelt die Url zu einer Seite oder einer Datei.
";s:5:"param";a:2:{i:0;a:2:{i:0;s:6:"string";i:1;s:7:"$params";}i:1;a:2:{i:0;s:5:"array";i:1;s:14:"$urlParameters";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:9:"$pageLink";}}s:7:"content";a:2:{i:0;s:138:"		$cObj = t3lib_div::makeInstance('tslib_cObj');
		$pageLink = $cObj->getTypoLink_URL($params, $urlParameters);

		return $pageLink;
	}

	";i:1;i:0;}s:12:"content_size";i:138;s:13:"content_lines";i:6;s:6:"atLine";i:105;}i:9;a:7:{s:6:"header";s:25:"function fixPath($path) {";s:11:"parentClass";s:24:"tx_datamintsfeuser_utils";s:4:"cDat";a:3:{s:4:"text";s:129:"

Wird verwendet, um doppelte Schraegstriche zu vermeiden.
Der Pfad wird mit einem abschliessenden Schraegstrich zurueckgegeben.
";s:5:"param";a:1:{i:0;a:2:{i:0;s:6:"string";i:1;s:5:"$path";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:5:"$path";}}s:7:"content";a:2:{i:0;s:43:"		return dirname($path . '/.') . '/';
	}

	";i:1;i:0;}s:12:"content_size";i:43;s:13:"content_lines";i:3;s:6:"atLine";i:119;}i:11;a:7:{s:6:"header";s:56:"function htmlspecialcharsPostArray(&$arrPost, $decode) {";s:11:"parentClass";s:24:"tx_datamintsfeuser_utils";s:4:"cDat";a:3:{s:4:"text";s:150:"

Konvertiert alle Werte des uebergebenen Post Arrays um z.B. XSS zu verhindern.
Der Modus gibt an ob die Werte encodiert oder decodiert werden soll.
";s:5:"param";a:2:{i:0;a:2:{i:0;s:5:"array";i:1;s:78:"$arrPost // Call by reference: Das Post Array dessen Werte konvertiert werden.";}i:1;a:2:{i:0;s:7:"boolean";i:1;s:7:"$decode";}}s:6:"return";a:2:{i:0;s:7:"boolean";i:1;s:0:"";}}s:7:"content";a:2:{i:0;s:507:"		if ($decode) {
			// Konvertiert alle moeglichen Zeichen die fuer die Ausgabe angepasst wurden zurueck.
			foreach ($arrPost as $key => $val) {
				if (!is_array($arrPost[$key])) {
					$arrPost[$key] = htmlspecialchars_decode($val);
				}
			}
		} else {
			// Konvertiert alle moeglichen Zeichen der Ausgabe, die stoeren koennten (XSS).
			foreach ($arrPost as $key => $v
[...]
				array_walk_recursive($arrPost[$key], 'tx_datamintsfeuser_utils::stripTagsCallback');
				}
			}
		}

		return true;
	}

	";i:1;i:1;}s:12:"content_size";i:784;s:13:"content_lines";i:23;s:6:"atLine";i:131;}i:13;a:7:{s:6:"header";s:51:"function shiftEmptyArrayValuePostArray(&$arrPost) {";s:11:"parentClass";s:24:"tx_datamintsfeuser_utils";s:4:"cDat";a:3:{s:4:"text";s:171:"

Es wird jeder Wert im Post Array ueberprueft ob er ein Array ist.
Wenn dass der Fall ist, wird der erste Wert in diesem Array entfernt, falls dieser ein Leerstring ist.
";s:5:"param";a:1:{i:0;a:2:{i:0;s:5:"array";i:1;s:45:"$arrPost // Call by reference: Das Post Array";}}s:6:"return";a:2:{i:0;s:7:"boolean";i:1;s:0:"";}}s:7:"content";a:2:{i:0;s:172:"		foreach($arrPost as $key => $value) {
			if (is_array($value) && $value[0] === '') {
				array_shift($value);

				$arrPost[$key] = $value;
			}
		}

		return true;
	}

	";i:1;i:0;}s:12:"content_size";i:172;s:13:"content_lines";i:11;s:6:"atLine";i:162;}i:15;a:7:{s:6:"header";s:62:"function generatePassword($password, $arrGenerate = array()) {";s:11:"parentClass";s:24:"tx_datamintsfeuser_utils";s:4:"cDat";a:3:{s:4:"text";s:125:"

Erstellt wenn gefordert ein Password, und verschluesselt dieses, oder das uebergebene, wenn es verschluesselt werden soll.
";s:5:"param";a:2:{i:0;a:2:{i:0;s:6:"string";i:1;s:9:"$password";}i:1;a:2:{i:0;s:5:"array";i:1;s:12:"$arrGenerate";}}s:6:"return";a:2:{i:0;s:5:"array";i:1;s:12:"$arrPassword";}}s:7:"content";a:2:{i:0;s:507:"		$arrPassword = array();

		// Uebergebenes Password setzten.
		// Hier wird kein strip_tags() o.Ae. benoetigt, da beim schreiben in die Datenbank immer "$GLOBALS['TYPO3_DB']->fullQuoteStr()" ausgefuehrt wird!
		$arrPassword['normal'] = trim($password);

		// Erstellt ein Password.
		if ($arrGenerate['mode']) {
			$i = 1;
			$arrPassword['normal'] = '';
			$chars = '23456
[...]
rd['encrypted'] = $tx_t3secsaltedpw_phpass->getHashedPassword($arrPassword['normal']);
			}
		}

		return $arrPassword;
	}

	";i:1;i:1;}s:12:"content_size";i:2199;s:13:"content_lines";i:55;s:6:"atLine";i:181;}i:17;a:7:{s:6:"header";s:62:"function checkPassword($submitedPassword, $originalPassword) {";s:11:"parentClass";s:24:"tx_datamintsfeuser_utils";s:4:"cDat";a:3:{s:4:"text";s:172:"

Ueberprueft anhand der aktuellen Verschluesselungsextension, ob das uebergebene unverschluesselte Passwort mit dem uebergebenen verschluesselten Passwort uebereinstimmt.
";s:5:"param";a:2:{i:0;a:2:{i:0;s:6:"string";i:1;s:17:"$submitedPassword";}i:1;a:2:{i:0;s:6:"string";i:1;s:17:"$originalPassword";}}s:6:"return";a:2:{i:0;s:7:"boolean";i:1;s:6:"$check";}}s:7:"content";a:2:{i:0;s:507:"		$check = false;

		// Wenn "saltedpasswords" installiert ist wird deren Konfiguration geholt, und je nach Einstellung das Password ueberprueft.
		if (t3lib_extMgm::isLoaded('saltedpasswords') && $GLOBALS['TYPO3_CONF_VARS']['FE']['loginSecurityLevel']) {
			$saltedpasswords = tx_saltedpasswords_div::returnExtConf();

			if ($saltedpasswords['enabled']) {
				$tx_saltedpas
[...]
schluesselung).
		else {
			if ($submitedPassword == $originalPassword) {
				$check = true;
			}
		}

		return $check;
	}

	";i:1;i:1;}s:12:"content_size";i:1733;s:13:"content_lines";i:48;s:6:"atLine";i:244;}i:19;a:7:{s:6:"header";s:72:"function userAutoLogin($userId, $pageId = 0, $urlParameters = array()) {";s:11:"parentClass";s:24:"tx_datamintsfeuser_utils";s:4:"cDat";a:3:{s:4:"text";s:43:"

Vollzieht einen Login ohne ein Passwort.
";s:5:"param";a:3:{i:0;a:2:{i:0;s:7:"integer";i:1;s:7:"$userId";}i:1;a:2:{i:0;s:7:"integer";i:1;s:7:"$pageId";}i:2;a:2:{i:0;s:5:"array";i:1;s:14:"$urlParameters";}}s:6:"return";a:2:{i:0;s:4:"void";i:1;s:0:"";}}s:7:"content";a:2:{i:0;s:302:"		// Login vollziehen.
		$GLOBALS['TSFE']->fe_user->checkPid = 0;

		$userRecord = $GLOBALS['TSFE']->fe_user->getRawUserByUid($userId);

		$GLOBALS['TSFE']->fe_user->createUserSession($userRecord);

		// Umleiten, damit der Login wirksam wird.
		self::userRedirect($pageId, $urlParameters, true);
	}

	";i:1;i:0;}s:12:"content_size";i:302;s:13:"content_lines";i:11;s:6:"atLine";i:301;}i:21;a:7:{s:6:"header";s:91:"function userRedirect($pageId = 0, $urlParameters = array(), $disableAccessCheck = false) {";s:11:"parentClass";s:24:"tx_datamintsfeuser_utils";s:4:"cDat";a:3:{s:4:"text";s:82:"

Vollzieht einen Redirect mit der Seite die benutzt wird, oder auf die aktuelle.
";s:5:"param";a:3:{i:0;a:2:{i:0;s:7:"integer";i:1;s:7:"$pageId";}i:1;a:2:{i:0;s:5:"array";i:1;s:14:"$urlParameters";}i:2;a:2:{i:0;s:7:"boolean";i:1;s:19:"$disableAccessCheck";}}s:6:"return";a:2:{i:0;s:4:"void";i:1;s:0:"";}}s:7:"content";a:2:{i:0;s:507:"		// Normalen Redirect, oder Redirect auf die gewuenschte Seite.
		if (!$pageId) {
			$pageId = $GLOBALS['TSFE']->id;
		}

		// Damit man auch auf Seiten die erst nach dem Login sichtbar sind umleiten kann, wird hier die Gruppen Zugangsüberprüfung vorrübergehend deaktiviert.
		// Das wird aber nur bei einem Autologin benötigt, da sich nur dort der Status des Users wäh
[...]
lf::getTypoLinkUrl($pageId, $urlParameters);

		header('Location: ' . t3lib_div::locationHeaderUrl($pageLink));
		exit;
	}

	";i:1;i:1;}s:12:"content_size";i:803;s:13:"content_lines";i:18;s:6:"atLine";i:321;}i:23;a:7:{s:6:"header";s:31:"function escapeBrackets($url) {";s:11:"parentClass";s:24:"tx_datamintsfeuser_utils";s:4:"cDat";a:3:{s:4:"text";s:50:"

URL encoded die eckigen Klammern in einem Link.
";s:5:"param";a:1:{i:0;a:2:{i:0;s:6:"string";i:1;s:4:"$url";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:0:"";}}s:7:"content";a:2:{i:0;s:128:"		$replace = array('[' => '%5b', ']' => '%5d');

		return str_replace(array_keys($replace), array_values($replace), $url);
	}

	";i:1;i:0;}s:12:"content_size";i:128;s:13:"content_lines";i:5;s:6:"atLine";i:346;}i:25;a:7:{s:6:"header";s:41:"function getSpecialFieldKey($fieldName) {";s:11:"parentClass";s:24:"tx_datamintsfeuser_utils";s:4:"cDat";a:3:{s:4:"text";s:110:"

Fuegt die '--' Zeichen vor und hinter dem eigendlichen Feldnamen, hinzu um den eindeutigen Key zu bekommen.
";s:5:"param";a:1:{i:0;a:2:{i:0;s:6:"string";i:1;s:10:"$fieldName";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:0:"";}}s:7:"content";a:2:{i:0;s:40:"		return '--' . $fieldName . '--';
	}

	";i:1;i:0;}s:12:"content_size";i:40;s:13:"content_lines";i:3;s:6:"atLine";i:358;}i:27;a:7:{s:6:"header";s:42:"function getSpecialFieldName($fieldName) {";s:11:"parentClass";s:24:"tx_datamintsfeuser_utils";s:4:"cDat";a:3:{s:4:"text";s:113:"

Ersetzt die beim Eingeben angegebenen '--' Zeichen vor und hinter dem eigendlichen Feldnamen, falls vorhanden.
";s:5:"param";a:1:{i:0;a:2:{i:0;s:6:"string";i:1;s:10:"$fieldName";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:0:"";}}s:7:"content";a:2:{i:0;s:135:"		if (preg_match('/^--.*--$/', $fieldName)) {
			return preg_replace('/^--(.*)--$/', '\1', $fieldName);
		}

		return $fieldName;
	}

	";i:1;i:0;}s:12:"content_size";i:135;s:13:"content_lines";i:7;s:6:"atLine";i:368;}i:29;a:7:{s:6:"header";s:44:"function convertHtmlEmailToPlain($content) {";s:11:"parentClass";s:24:"tx_datamintsfeuser_utils";s:4:"cDat";a:3:{s:4:"text";s:59:"

Convertiert eine HTML E-Mail zu einer Plain Text E-Mail.
";s:5:"param";a:1:{i:0;a:2:{i:0;s:6:"string";i:1;s:8:"$content";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:8:"$content";}}s:7:"content";a:2:{i:0;s:507:"		$newLine = chr(13) . chr(10);

		// Den Head entfernen.
		$content = preg_replace('/<head>.*?<\/head>/s', '', $content, 1);

		// Links auflösen (A-Tag entfernen und Href extrahieren).
		$content = preg_replace('/<a[^>]*href="([^"]*)"[^>]*>[^<]*<\/a>/i', ' $1 ', $content);

		// Nach jedem schliessenden Tag eine Leerzeile einfuegen.
		$content = preg_replace('/>/i', '>'
[...]
araus machen.
		$content = preg_replace('/(' . $newLine . '){2,}/', $newLine . $newLine, $content);

		return $content;
	}

	";i:1;i:1;}s:12:"content_size";i:980;s:13:"content_lines";i:32;s:6:"atLine";i:382;}i:31;a:7:{s:6:"header";s:83:"function getTemplateSubpart($templateFile, $templatePart, $markerArray = array()) {";s:11:"parentClass";s:24:"tx_datamintsfeuser_utils";s:4:"cDat";a:3:{s:4:"text";s:74:"

Holt einen Subpart des Standardtemplates und ersetzt uebergeben Marker.
";s:5:"param";a:3:{i:0;a:2:{i:0;s:6:"string";i:1;s:13:"$templateFile";}i:1;a:2:{i:0;s:6:"string";i:1;s:13:"$templatePart";}i:2;a:2:{i:0;s:5:"array";i:1;s:12:"$markerArray";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:9:"$template";}}s:7:"content";a:2:{i:0;s:404:"		// Template laden.
		$cObj = t3lib_div::makeInstance('tslib_cObj');
		$template = $cObj->fileResource($templateFile);
		$template = $cObj->getSubpart($template, '###' . strtoupper($templatePart) . '###');

//		if (!self::checkUtf8($template)) {
//			$template = utf8_encode($template);
//		}

		$template = $cObj->substituteMarkerArray($template, $markerArray, '###|###', 1);

		return $template;
	}

	";i:1;i:0;}s:12:"content_size";i:404;s:13:"content_lines";i:14;s:6:"atLine";i:423;}i:33;a:7:{s:6:"header";s:77:"function getFlexformConfigurationFromTab($flexData, $sTab, $conf = array()) {";s:11:"parentClass";s:24:"tx_datamintsfeuser_utils";s:4:"cDat";a:3:{s:4:"text";s:76:"

Parst das Flexform Konfigurations Array und schreibt alle Werte in $conf.
";s:5:"param";a:3:{i:0;a:2:{i:0;s:5:"array";i:1;s:9:"$flexData";}i:1;a:2:{i:0;s:6:"string";i:1;s:6:"$sType";}i:2;a:2:{i:0;s:5:"array";i:1;s:5:"$conf";}}s:6:"return";a:2:{i:0;s:5:"array";i:1;s:5:"$conf";}}s:7:"content";a:2:{i:0;s:507:"		 if (is_array($flexData)) {
			 if (isset($flexData['data'][$sTab]['lDEF'])) {
				 $flexData = $flexData['data'][$sTab]['lDEF'];
			 }

			 foreach ($flexData as $key => $value) {
				 if (is_array($value['el']) && count($value['el']) > 0) {
					 foreach ($value['el'] as $ekey => $element) {
						 if (isset($element['vDEF'])) {
							 $conf[$ekey] = $element['vDEF'];
[...]
ab, $conf);
				 }

				 if ($value['vDEF']) {
					 $conf[$key] = $value['vDEF'];
				 }
			 }
		 }

		 return $conf;
	 }

	";i:1;i:1;}s:12:"content_size";i:722;s:13:"content_lines";i:27;s:6:"atLine";i:446;}i:35;a:7:{s:6:"header";s:61:"function setFlexformConfigurationValue($key, $value, $conf) {";s:11:"parentClass";s:24:"tx_datamintsfeuser_utils";s:4:"cDat";a:3:{s:4:"text";s:106:"

Ueberschreibt eventuell vorhandene TypoScript Konfigurationen mit den Konfigurationen aus der Flexform.
";s:5:"param";a:3:{i:0;a:2:{i:0;s:6:"string";i:1;s:4:"$key";}i:1;a:2:{i:0;s:6:"string";i:1;s:6:"$value";}i:2;a:2:{i:0;s:5:"array";i:1;s:5:"$conf";}}s:6:"return";a:2:{i:0;s:5:"array";i:1;s:5:"$conf";}}s:7:"content";a:2:{i:0;s:489:"		if (strpos($key, '.') !== false && $value) {
			$arrKey = t3lib_div::trimExplode('.', $key, true);

			for ($i = count($arrKey) - 1; $i >= 0; $i--) {
				$newValue = array();

				if ($i == count($arrKey) - 1) {
					$newValue[$arrKey[$i]] = $value;
				} else {
					$newValue[$arrKey[$i] . '.'] = $value;
				}

				$value = $newValue;
			}

			$conf = t3lib_div::array_merge_recursive_overrule($conf, $value);
		} else if ($value) {
			$conf[$key] = $value;
		}

		return $conf;
	}

	";i:1;i:0;}s:12:"content_size";i:489;s:13:"content_lines";i:23;s:6:"atLine";i:482;}i:37;a:7:{s:6:"header";s:33:"function trimCallback(&$string) {";s:11:"parentClass";s:24:"tx_datamintsfeuser_utils";s:4:"cDat";a:3:{s:4:"text";s:67:"

Nimmt einen String entgegen um auf diesen ein trim() anzuwenden.
";s:5:"param";a:1:{i:0;a:2:{i:0;s:6:"string";i:1;s:59:"$string // Call by reference: Der String der getrimmt wird.";}}s:6:"return";a:2:{i:0;s:4:"void";i:1;s:0:"";}}s:7:"content";a:2:{i:0;s:32:"		$string = trim($string);
	}

	";i:1;i:0;}s:12:"content_size";i:32;s:13:"content_lines";i:3;s:6:"atLine";i:512;}i:39;a:4:{s:6:"header";s:38:"function stripTagsCallback(&$string) {";s:11:"parentClass";s:24:"tx_datamintsfeuser_utils";s:4:"cDat";a:3:{s:4:"text";s:73:"

Nimmt einen String entgegen um auf diesen ein strip_tags() anzuwenden.
";s:5:"param";a:1:{i:0;a:2:{i:0;s:6:"string";i:1;s:60:"$string // Call by reference: Der String der gesaubert wird.";}}s:6:"return";a:2:{i:0;s:4:"void";i:1;s:0:"";}}s:6:"atLine";i:522;}i:41;a:7:{s:6:"header";s:26:"function checkUtf8($str) {";s:11:"parentClass";s:24:"tx_datamintsfeuser_utils";s:4:"cDat";a:3:{s:4:"text";s:45:"

Checks if a string is utf8 encoded or not.
";s:5:"param";a:1:{i:0;a:2:{i:0;s:6:"string";i:1;s:4:"$str";}}s:6:"return";a:2:{i:0;s:7:"boolean";i:1;s:0:"";}}s:7:"content";a:2:{i:0;s:507:"		$len = strlen($str);
		for ($i = 0; $i < $len; $i++) {
			$c = ord($str[$i]);

			if ($c > 128) {
				if (($c > 247)) {
					return false;
				} else if ($c > 239) {
					$bytes = 4;
				} else if ($c > 223) {
					$bytes = 3;
				} else if ($c > 191) {
					$bytes = 2;
				} else {
					return false;
				}

				if (($i + $bytes) > $len) {
					return false;
				}

				w
[...]
{
	include_once($TYPO3_CONF_VARS[TYPO3_MODE]['XCLASS']['ext/datamints_feuser/lib/class.tx_datamintsfeuser_utils.php']);
}

?>";i:1;i:1;}s:12:"content_size";i:803;s:13:"content_lines";i:43;s:6:"atLine";i:532;}}s:10:"usageCount";a:21:{s:12:"H_53a2e46ba8";a:2:{s:24:"_searchtime_milliseconds";d:0;s:15:"_functionHeader";s:32:"class tx_datamintsfeuser_utils {";}s:12:"H_bc6bcaad7e";a:4:{s:3:"ALL";a:2:{s:14:"nonObjectUsage";i:1;s:5:"TOTAL";i:1;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:14:"nonObjectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:37:"function getFeUsersTca($feUsersTca) {";}s:12:"H_5e2e72d1f3";a:4:{s:3:"ALL";a:2:{s:14:"nonObjectUsage";i:1;s:5:"TOTAL";i:1;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:14:"nonObjectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:43:"function getStoragePageId($storagePageId) {";}s:12:"H_edd3d45342";a:5:{s:3:"ALL";a:2:{s:14:"nonObjectUsage";i:6;s:5:"TOTAL";i:6;}s:14:"MD5_850248a7ec";a:3:{s:8:"fileName";s:38:"lib/class.tx_datamintsfeuser_utils.php";s:14:"nonObjectUsage";i:1;s:5:"TOTAL";i:1;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:14:"nonObjectUsage";i:5;s:5:"TOTAL";i:5;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:60:"function getTypoLinkUrl($params, $urlParameters = array()) {";}s:12:"H_7ad0ffc0f4";a:4:{s:3:"ALL";a:2:{s:14:"nonObjectUsage";i:2;s:5:"TOTAL";i:2;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:14:"nonObjectUsage";i:2;s:5:"TOTAL";i:2;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:25:"function fixPath($path) {";}s:12:"H_6362f3754c";a:4:{s:3:"ALL";a:2:{s:14:"nonObjectUsage";i:2;s:5:"TOTAL";i:2;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:14:"nonObjectUsage";i:2;s:5:"TOTAL";i:2;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:56:"function htmlspecialcharsPostArray(&$arrPost, $decode) {";}s:12:"H_442b78a085";a:4:{s:3:"ALL";a:2:{s:14:"nonObjectUsage";i:1;s:5:"TOTAL";i:1;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:14:"nonObjectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:51:"function shiftEmptyArrayValuePostArray(&$arrPost) {";}s:12:"H_9c208336f3";a:4:{s:3:"ALL";a:2:{s:14:"nonObjectUsage";i:2;s:5:"TOTAL";i:2;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:14:"nonObjectUsage";i:2;s:5:"TOTAL";i:2;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:62:"function generatePassword($password, $arrGenerate = array()) {";}s:12:"H_921cd090f1";a:5:{s:3:"ALL";a:3:{s:11:"objectUsage";i:2;s:5:"TOTAL";i:3;s:14:"nonObjectUsage";i:1;}s:14:"MD5_850248a7ec";a:3:{s:8:"fileName";s:38:"lib/class.tx_datamintsfeuser_utils.php";s:11:"objectUsage";i:2;s:5:"TOTAL";i:2;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:14:"nonObjectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:62:"function checkPassword($submitedPassword, $originalPassword) {";}s:12:"H_9bc8d6b910";a:4:{s:3:"ALL";a:2:{s:14:"nonObjectUsage";i:1;s:5:"TOTAL";i:1;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:14:"nonObjectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:72:"function userAutoLogin($userId, $pageId = 0, $urlParameters = array()) {";}s:12:"H_4d109e5db5";a:5:{s:3:"ALL";a:2:{s:14:"nonObjectUsage";i:2;s:5:"TOTAL";i:2;}s:14:"MD5_850248a7ec";a:3:{s:8:"fileName";s:38:"lib/class.tx_datamintsfeuser_utils.php";s:14:"nonObjectUsage";i:1;s:5:"TOTAL";i:1;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:14:"nonObjectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:91:"function userRedirect($pageId = 0, $urlParameters = array(), $disableAccessCheck = false) {";}s:12:"H_4705906fdd";a:4:{s:3:"ALL";a:2:{s:14:"nonObjectUsage";i:2;s:5:"TOTAL";i:2;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:14:"nonObjectUsage";i:2;s:5:"TOTAL";i:2;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:31:"function escapeBrackets($url) {";}s:12:"H_df9fdb389f";a:4:{s:3:"ALL";a:2:{s:14:"nonObjectUsage";i:14;s:5:"TOTAL";i:14;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:14:"nonObjectUsage";i:14;s:5:"TOTAL";i:14;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:41:"function getSpecialFieldKey($fieldName) {";}s:12:"H_7000bf53e5";a:4:{s:3:"ALL";a:2:{s:14:"nonObjectUsage";i:4;s:5:"TOTAL";i:4;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:14:"nonObjectUsage";i:4;s:5:"TOTAL";i:4;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:42:"function getSpecialFieldName($fieldName) {";}s:12:"H_31deb5f1ad";a:4:{s:3:"ALL";a:2:{s:14:"nonObjectUsage";i:1;s:5:"TOTAL";i:1;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:14:"nonObjectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:44:"function convertHtmlEmailToPlain($content) {";}s:12:"H_77460409ce";a:4:{s:3:"ALL";a:3:{s:11:"objectUsage";i:5;s:5:"TOTAL";i:6;s:14:"nonObjectUsage";i:1;}s:14:"MD5_8f66ccd171";a:4:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:5;s:5:"TOTAL";i:6;s:14:"nonObjectUsage";i:1;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:83:"function getTemplateSubpart($templateFile, $templatePart, $markerArray = array()) {";}s:12:"H_5af5a3c32a";a:5:{s:3:"ALL";a:2:{s:14:"nonObjectUsage";i:3;s:5:"TOTAL";i:3;}s:14:"MD5_850248a7ec";a:3:{s:8:"fileName";s:38:"lib/class.tx_datamintsfeuser_utils.php";s:14:"nonObjectUsage";i:2;s:5:"TOTAL";i:2;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:14:"nonObjectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:2;s:15:"_functionHeader";s:77:"function getFlexformConfigurationFromTab($flexData, $sTab, $conf = array()) {";}s:12:"H_4ea5ad9ee4";a:4:{s:3:"ALL";a:2:{s:14:"nonObjectUsage";i:1;s:5:"TOTAL";i:1;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:14:"nonObjectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:61:"function setFlexformConfigurationValue($key, $value, $conf) {";}s:12:"H_193525a1c0";a:2:{s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:33:"function trimCallback(&$string) {";}s:12:"H_9e31cf1432";a:2:{s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:38:"function stripTagsCallback(&$string) {";}s:12:"H_8c58dc9f10";a:5:{s:3:"ALL";a:2:{s:14:"nonObjectUsage";i:2;s:5:"TOTAL";i:2;}s:14:"MD5_850248a7ec";a:3:{s:8:"fileName";s:38:"lib/class.tx_datamintsfeuser_utils.php";s:14:"nonObjectUsage";i:1;s:5:"TOTAL";i:1;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:14:"nonObjectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:26:"function checkUtf8($str) {";}}}s:14:"MD5_8f66ccd171";a:5:{s:8:"filename";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:8:"filesize";i:118789;s:6:"header";a:5:{s:4:"text";s:74:"

Plugin 'Frontend User Management' for the 'datamints_feuser' extension.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}s:5:"other";a:3:{i:0;s:54:"@author	Bernhard Baumgartl <b.baumgartl@datamints.com>";i:1;s:14:"@package	TYPO3";i:2;s:30:"@subpackage	tx_datamintsfeuser";}s:11:"other_index";a:3:{s:7:"@author";a:1:{i:0;s:46:"Bernhard Baumgartl <b.baumgartl@datamints.com>";}s:8:"@package";a:1:{i:0;s:6:"TYPO3 ";}s:11:"@subpackage";a:1:{i:0;s:19:"tx_datamintsfeuser ";}}}s:3:"DAT";a:54:{i:1;a:8:{s:6:"header";s:51:"class tx_datamintsfeuser_pi1 extends tslib_pibase {";s:5:"class";i:1;s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:5:{s:4:"text";s:74:"

Plugin 'Frontend User Management' for the 'datamints_feuser' extension.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}s:5:"other";a:3:{i:0;s:54:"@author	Bernhard Baumgartl <b.baumgartl@datamints.com>";i:1;s:14:"@package	TYPO3";i:2;s:30:"@subpackage	tx_datamintsfeuser";}s:11:"other_index";a:3:{s:7:"@author";a:1:{i:0;s:46:"Bernhard Baumgartl <b.baumgartl@datamints.com>";}s:8:"@package";a:1:{i:0;s:6:"TYPO3 ";}s:11:"@subpackage";a:1:{i:0;s:19:"tx_datamintsfeuser ";}}}s:7:"content";a:2:{i:0;s:1660:"	var $extKey = 'datamints_feuser';
	var $prefixId = 'tx_datamintsfeuser_pi1';
	var $scriptRelPath = 'pi1/class.tx_datamintsfeuser_pi1.php';

	var $conf = array();
	var $lang = array();
	var $extConf = array();
	var $feUsersTca = array();

	var $userId = 0;
	var $contentId = 0;
	var $storagePageId = 0;

	var $arrUsedFields = array();
	var $arrUniqueFields = array();
	var $arrRequiredFields = array();
	var $arrHiddenParams = array();

	const modeKeySend = 'send';
	const modeKeyApprovalcheck = 'approvalcheck';

	const submodeKeySent = 'sent';
	const submodeKeyFailure = 'failure';
	const submodeKeySuccess = 'success';

	const showtypeKeyEdit = 'edit';
	const showtypeKeyRegister = 'register';

	const validationerrorKeySize = 'size';
	const validationerrorKeyType = 'type';
	const validationerrorKeyEqual = 'equal';
	const validationerrorKeyValid = 'valid';
	const validationerrorKeyDelete = 'delete';
	const validationerrorKeyLength = 'length';
	const validationerrorKeyUnique = 'unique';
	const validationerrorKeyUpload = 'upload';
	const validationerrorKeyRequired = 'required';

	const submitparameterKeyHash = 'hash';
	const submitparameterKeyMode = 'submit';
	const submitparameterKeyPage = 'pageid';
	const submitparameterKeyUser = 'userid';
	const submitparameterKeySubmode = 'submitmode';

	const specialfieldKeySubmit = 'submit';
	const specialfieldKeyCaptcha = 'captcha';
	const specialfieldKeyInfoitem = 'infoitem';
	const specialfieldKeySeparator = 'separator';
	const specialfieldKeyUserdelete = 'userdelete';
	const specialfieldKeyResendactivation = 'resendactivation';
	const specialfieldKeyPasswordconfirmation = 'passwordconfirmation';

	";i:1;i:-1;}s:12:"content_size";i:1660;s:13:"content_lines";i:52;s:6:"atLine";i:99;}i:3;a:7:{s:6:"header";s:32:"function main($content, $conf) {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:32:"

The main method of the PlugIn
";s:5:"param";a:2:{i:0;a:2:{i:0;s:6:"string";i:1;s:8:"$content";}i:1;a:2:{i:0;s:5:"array";i:1;s:5:"$conf";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:8:"$content";}}s:7:"content";a:2:{i:0;s:507:"		$this->conf = $conf;

		// Debug.
//		$GLOBALS['TSFE']->set_no_cache();
//		$GLOBALS['TYPO3_DB']->debugOutput = true;

		// PiVars und Flexform laden.
		$this->pi_setPiVarDefaults();
		$this->pi_initPIflexForm();

		// Erst die Konfiguration und dann die Labels laden, damit die in der Flexform gesetzten Labels auch beruecksichtigt werden!
		$this->determineConfiguration(
[...]
			break;

			default:
				$content = $this->showForm();
				break;

		}

		return $this->pi_wrapInBaseClass($content);
	}

	";i:1;i:1;}s:12:"content_size";i:3533;s:13:"content_lines";i:76;s:6:"atLine";i:159;}i:5;a:7:{s:6:"header";s:25:"function doFormSubmit() {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:122:"

Bereitet die uebergebenen Daten fuer den Import in die Datenbank vor, und fuehrt diesen, wenn es keine Fehler gab, aus.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:0:"";}}s:7:"content";a:2:{i:0;s:507:"		$mode = '';
		$submode = '';
		$params = array();
		$arrUpdate = array();

		// Falls ein Leerstring in einem Array-Wert an erster Stelle steht, handelt es sich um ein verstecktes Feld. Dieses muss entfernt werden.
		tx_datamintsfeuser_utils::shiftEmptyArrayValuePostArray($this->piVars[$this->contentId]);

		// Jedes Element in piVars trimmen.
		array_walk_recursive($thi
[...]
::callUserFunction($_funcRef, $_params, $this);
			}
		}

		return $this->showOutputRedirect($mode, $submode, $params);
	}

	";i:1;i:1;}s:12:"content_size";i:8050;s:13:"content_lines";i:194;s:6:"atLine";i:241;}i:7;a:7:{s:6:"header";s:23:"function checkValid() {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:56:"

Ueberprueft ob alle Validierungen eingehalten wurden.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:5:"array";i:1;s:11:"$valueCheck";}}s:7:"content";a:2:{i:0;s:507:"		$valueCheck = array();

		// Alle ausgewaehlten Felder durchgehen.
		foreach ($this->arrUsedFields as $fieldName) {
			$fieldName = tx_datamintsfeuser_utils::getSpecialFieldName($fieldName);
			$fieldConfig = $this->feUsersTca['columns'][$fieldName]['config'];

			$value = $this->piVars[$this->contentId][$fieldName];
			$validate = $this->conf['validate.'][$fieldName . '
[...]
eck[$fieldName] = self::validationerrorKeyLength;
							}
						}
					}
					break;

			}

		}

		return $valueCheck;
	}

	";i:1;i:1;}s:12:"content_size";i:5314;s:13:"content_lines";i:147;s:6:"atLine";i:441;}i:9;a:7:{s:6:"header";s:24:"function checkUnique() {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:112:"

Ueberprueft die uebergebenen Inhalte, bei bestimmten Feldern, ob diese in der Datenbank schon vorhanden sind.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:5:"array";i:1;s:11:"$valueCheck";}}s:7:"content";a:2:{i:0;s:507:"		$where = '';
		$valueCheck = array();

		// Beim Bearbeiten, den eigenen Datensatz nicht ueberpruefen.
		if ($this->conf['showtype'] == self::showtypeKeyEdit) {
			$where .= ' AND uid <> ' . $this->userId;
		}

		// Wenn beim Bearbeiten keine "userfolder" gesetzt ist, soll global ueberprueft werden, ansonsten nur im Storage!
		if (!$this->conf['uniqueglobal'] && $this->g
[...]
w['count'] >= 1) {
					$valueCheck[$fieldName] = self::validationerrorKeyUnique;
				}
			}
		}

		return $valueCheck;
	}

	";i:1;i:1;}s:12:"content_size";i:1002;s:13:"content_lines";i:27;s:6:"atLine";i:594;}i:11;a:7:{s:6:"header";s:26:"function checkRequired() {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:73:"

Ueberprueft ob alle benoetigten Felder mit Inhalten uebergeben wurden.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:5:"array";i:1;s:11:"$valueCheck";}}s:7:"content";a:2:{i:0;s:507:"		$valueCheck = array();

		// Geht alle benoetigten Felder durch und ermittelt fehlende.
		foreach ($this->arrRequiredFields as $fieldName) {
			// Ueberpruefen, ob das Feld ueberhaupt angezeigt wurde.
			if (!in_array($fieldName, $this->arrUsedFields)) {
				continue;
			}

			$fieldConfig = $this->feUsersTca['columns'][$fieldName]['config'];

			$fieldName = tx_datamint
[...]
h einem Leerstring ist!
			if ($fieldValue != '') {
				unset($valueCheck[$fieldName]);
			}
		}

		return $valueCheck;
	}

	";i:1;i:1;}s:12:"content_size";i:2134;s:13:"content_lines";i:53;s:6:"atLine";i:627;}i:13;a:7:{s:6:"header";s:31:"function checkCaptcha($value) {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:55:"

Ueberprueft ob das Captcha richtig eingegeben wurde.
";s:5:"param";a:1:{i:0;a:2:{i:0;s:6:"string";i:1;s:6:"$value";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:0:"";}}s:7:"content";a:2:{i:0;s:507:"		if (!t3lib_extMgm::isLoaded($this->conf['captcha.']['use'])) {
			return '';
		}

		switch ($this->conf['captcha.']['use']) {

			case 'captcha':
				session_start();

				$captchaString = $_SESSION['tx_captcha_string'];

				if ($value != $captchaString) {
					return self::validationerrorKeyValid;
				}

				break;

			case 'sr_freecap':
				require_once(t3lib_extMgm::
[...]
culatingcaptcha->correctCode($value)) {
					return self::validationerrorKeyValid;
				}

				break;

		}

		return '';
	}

	";i:1;i:1;}s:12:"content_size";i:1334;s:13:"content_lines";i:57;s:6:"atLine";i:687;}i:15;a:7:{s:6:"header";s:68:"function cleanPasswordField(&$arrUpdate, $fieldName, $fieldConfig) {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:90:"

Falls angegebe das Passwort fuer ein Passwortfeld generieren und / oder verschluesseln.
";s:5:"param";a:3:{i:0;a:2:{i:0;s:5:"array";i:1;s:76:"$arrUpdate // Call by reference: Das Array in dem das zu saubernde Feld ist.";}i:1;a:2:{i:0;s:6:"string";i:1;s:10:"$fieldName";}i:2;a:2:{i:0;s:5:"array";i:1;s:12:"$fieldConfig";}}s:6:"return";a:2:{i:0;s:7:"boolean";i:1;s:0:"";}}s:7:"content";a:2:{i:0;s:431:"		// Password generieren und verschluesseln je nach Einstellung.
		$password = tx_datamintsfeuser_utils::generatePassword($this->piVars[$this->contentId][$fieldName], $this->getConfigurationByShowtype('generatepassword.'));
		$arrUpdate[$fieldName] = $password['encrypted'];

		// Wenn kein Password uebergeben wurde auch keins schreiben.
		if (!$arrUpdate[$fieldName]) {
			unset($arrUpdate[$fieldName]);
		}

		return true;
	}

	";i:1;i:0;}s:12:"content_size";i:431;s:13:"content_lines";i:12;s:6:"atLine";i:753;}i:17;a:7:{s:6:"header";s:65:"function cleanCheckField(&$arrUpdate, $fieldName, $fieldConfig) {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:163:"

Saeubert Checkboxfelder, indem die uebergebenen Werte durch 1 oder 0 ausgetauscht werden.
Gilt fuer eine oder mehrere Checkboxen (nicht fuer scrollbare Listen).
";s:5:"param";a:3:{i:0;a:2:{i:0;s:5:"array";i:1;s:76:"$arrUpdate // Call by reference: Das Array in dem das zu saubernde Feld ist.";}i:1;a:2:{i:0;s:6:"string";i:1;s:10:"$fieldName";}i:2;a:2:{i:0;s:5:"array";i:1;s:12:"$fieldConfig";}}s:6:"return";a:2:{i:0;s:7:"boolean";i:1;s:0:"";}}s:7:"content";a:2:{i:0;s:565:"		$checkItemsCount = count($fieldConfig['items']);

		// Mehrere Checkboxen oder eine Checkbox.
		if ($checkItemsCount > 1) {
			$binString = '';

			for ($key = 0; $key < $checkItemsCount; $key++) {
				if ($this->piVars[$this->contentId][$fieldName][$key]) {
					$binString .= '1';
				} else {
					$binString .= '0';
				}
			}

			$arrUpdate[$fieldName] = bindec(strrev($binString));
		} else {
			if ($this->piVars[$this->contentId][$fieldName]) {
				$arrUpdate[$fieldName] = '1';
			} else {
				$arrUpdate[$fieldName] = '0';
			}
		}

		return true;
	}

	";i:1;i:0;}s:12:"content_size";i:565;s:13:"content_lines";i:26;s:6:"atLine";i:775;}i:19;a:7:{s:6:"header";s:74:"function cleanMultipleSelectField(&$arrUpdate, $fieldName, $fieldConfig) {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:95:"

Saeubert MultipleSelectboxfelder indem auf jeden uebergebenen Wert intval() angewendet wird.
";s:5:"param";a:3:{i:0;a:2:{i:0;s:5:"array";i:1;s:76:"$arrUpdate // Call by reference: Das Array in dem das zu saubernde Feld ist.";}i:1;a:2:{i:0;s:6:"string";i:1;s:10:"$fieldName";}i:2;a:2:{i:0;s:5:"array";i:1;s:12:"$fieldConfig";}}s:6:"return";a:2:{i:0;s:7:"boolean";i:1;s:0:"";}}s:7:"content";a:2:{i:0;s:507:"		$maxItemsCount = 1;
		$arrCleanedValues = array();

		// Wenn nichts ausgewaehlt wurde, wird dieser Parameter auch nicht uebergeben, daher zuerst ueberpruefen, ob etwas vorhanden ist.
		if (!is_array($this->piVars[$this->contentId][$fieldName])) {
			return false;
		}

		foreach ($this->piVars[$this->contentId][$fieldName] as $val) {
			// Einen leeren String als Ueberga
[...]
] = intval($val);
			$maxItemsCount++;
		}

		$arrUpdate[$fieldName] = implode(',', $arrCleanedValues);

		return true;
	}

	";i:1;i:1;}s:12:"content_size";i:751;s:13:"content_lines";i:27;s:6:"atLine";i:810;}i:21;a:7:{s:6:"header";s:73:"function cleanGroupDatabaseField(&$arrUpdate, $fieldName, $fieldConfig) {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:65:"

Saeubert Group- und MultipleCheckboxfelder (scrollbare Liste).
";s:5:"param";a:3:{i:0;a:2:{i:0;s:5:"array";i:1;s:76:"$arrUpdate // Call by reference: Das Array in dem das zu saubernde Feld ist.";}i:1;a:2:{i:0;s:6:"string";i:1;s:10:"$fieldName";}i:2;a:2:{i:0;s:5:"array";i:1;s:12:"$fieldConfig";}}s:6:"return";a:2:{i:0;s:7:"boolean";i:1;s:0:"";}}s:7:"content";a:2:{i:0;s:507:"		$maxItemsCount = 1;
		$arrCleanedValues = array();

		$arrAllowed = t3lib_div::trimExplode(',', $fieldConfig['allowed'], true);

		// Hier werden absichtlich nur die Erlaubten Tabellen benutzt, da es sonst unmengen an möglichen Optionen geben wuerde!
		foreach ($arrAllowed as $table) {
			if (!$GLOBALS['TCA'][$table] || !is_array($this->piVars[$this->contentId][$fieldNa
[...]
r($val, strripos($val, '_') + 1);
			}
		}

		$arrUpdate[$fieldName] = implode(',', $arrCleanedValues);

		return true;
	}

	";i:1;i:1;}s:12:"content_size";i:1069;s:13:"content_lines";i:36;s:6:"atLine";i:846;}i:23;a:7:{s:6:"header";s:69:"function cleanUncleanedField(&$arrUpdate, $fieldName, $fieldConfig) {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:55:"

Saeubert die uebrigen Felder (Input, Textarea, ...).
";s:5:"param";a:3:{i:0;a:2:{i:0;s:5:"array";i:1;s:76:"$arrUpdate // Call by reference: Das Array in dem das zu saubernde Feld ist.";}i:1;a:2:{i:0;s:6:"string";i:1;s:10:"$fieldName";}i:2;a:2:{i:0;s:5:"array";i:1;s:12:"$fieldConfig";}}s:6:"return";a:2:{i:0;s:7:"boolean";i:1;s:0:"";}}s:7:"content";a:2:{i:0;s:507:"		// Wenn eine Selectbox die Ihren Inhalt aus einer anderen Tabelle hat angezeigt wurde, dann darf nur eine Zahl kommen!
		if ($fieldConfig['type'] == 'select' && $fieldConfig['foreign_table']) {
			$arrUpdate[$fieldName] = intval($this->piVars[$this->contentId][$fieldName]);

			return true;
		}

		// Ansonsten Standardsaeuberung.
		$arrUpdate[$fieldName] = strip_tags($th
[...]
ren.
		if ($fieldName == 'email') {
			$arrUpdate[$fieldName] = strtolower($arrUpdate[$fieldName]);
		}

		return true;
	}

	";i:1;i:1;}s:12:"content_size";i:608;s:13:"content_lines";i:18;s:6:"atLine";i:891;}i:25;a:7:{s:6:"header";s:65:"function saveDeleteFiles(&$arrUpdate, $fieldName, $fieldConfig) {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:80:"

The saveDeleteImage method is used to update or delete an image of an address
";s:5:"param";a:3:{i:0;a:2:{i:0;s:5:"array";i:1;s:76:"$arrUpdate // Call by reference: Das Array in dem das zu saubernde Feld ist.";}i:1;a:2:{i:0;s:6:"string";i:1;s:10:"$fieldName";}i:2;a:2:{i:0;s:5:"array";i:1;s:12:"$fieldConfig";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:6:"$error";}}s:7:"content";a:2:{i:0;s:507:"		$arrFieldVars = (array)$this->piVars[$this->contentId][$fieldName];

		$maxSize = $fieldConfig['max_size'] * 1024;
		$uploadFolder = tx_datamintsfeuser_utils::fixPath($fieldConfig['uploadfolder']);
		$allowedTypes = t3lib_div::trimExplode(',', strtolower(str_replace('*', '', $fieldConfig['allowed'])), true);
		$disallowedTypes = t3lib_div::trimExplode(',', strtolower(str
[...]
}
			}

			if ($error) {
				break;
			}
		}

		$arrUpdate[$fieldName] = implode(',', $arrFilenames);

		return $error;
	}

	";i:1;i:1;}s:12:"content_size";i:4048;s:13:"content_lines";i:106;s:6:"atLine";i:918;}i:27;a:7:{s:6:"header";s:34:"function copyFields(&$arrUpdate) {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:189:"

Kopiert anhand der angegebenen Konfigurationen Inhalte in dem uebergebenen Array an eine neue oder andere Stelle.
Dabei wird auf jeden kopierten Inhalt die stdWrap Funktionen angewendet.
";s:5:"param";a:1:{i:0;a:2:{i:0;s:5:"array";i:1;s:73:"$arrUpdate // Call by reference: Das Array dessen Inhalte kopiert werden.";}}s:6:"return";a:2:{i:0;s:7:"boolean";i:1;s:0:"";}}s:7:"content";a:2:{i:0;s:507:"		if (!is_array($this->conf['copyfields.'])) {
			return false;
		}

		// Kopiert den Inhalt eines Feldes in ein anderes Feld.
		$arrCopiedFields = array();

		foreach ($this->conf['copyfields.'] as $fieldToCopy => $arrCopyToFields) {
			$fieldToCopy = rtrim($fieldToCopy, '.');

			// Wenn das Feld nich existiert, ueberspringen.
			if (!array_key_exists($fieldToCopy, $this
[...]
Field] = $cObj->stdWrap($arrUpdate[$fieldToCopy], $arrCopyToFields[$copyToField . '.']);
				}
			}
		}

		return true;
	}

	";i:1;i:1;}s:12:"content_size";i:1506;s:13:"content_lines";i:49;s:6:"atLine";i:1032;}i:29;a:7:{s:6:"header";s:34:"function doUserEdit(&$arrUpdate) {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:71:"

Aktualisiert einen vorhandenen User, anhand des uebergebenen Arrays.
";s:5:"param";a:1:{i:0;a:2:{i:0;s:5:"array";i:1;s:74:"$arrUpdate // Call by reference: Das Array mit den bearbeiteten Userdaten.";}}s:6:"return";a:2:{i:0;s:5:"array";i:1;s:8:"$arrMode";}}s:7:"content";a:2:{i:0;s:507:"		$arrMode = array();

		// ToDo: MM-Relation, MM-Relationen setzen und die Anzahl der Relationen aktualisieren.
		$this->insertRelationInserts($this->userId, $this->getRelationInserts($arrUpdate));

		// Der User hat seine Daten editiert.
		$GLOBALS['TYPO3_DB']->exec_UPDATEquery('fe_users', 'uid = ' . $this->userId , $arrUpdate);

		// User und Admin Benachrichtigung schi
[...]
loescht wurde, weiterleiten.
		if ($arrUpdate['deleted']) {
			$arrMode['mode'] = 'userdelete';
		}

		return $arrMode;
	}

	";i:1;i:1;}s:12:"content_size";i:1557;s:13:"content_lines";i:34;s:6:"atLine";i:1088;}i:31;a:7:{s:6:"header";s:38:"function doUserRegister(&$arrUpdate) {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:55:"

Erstellt einen User, anhand des uebergebenen Arrays.
";s:5:"param";a:1:{i:0;a:2:{i:0;s:5:"array";i:1;s:67:"$arrUpdate // Call by reference: Das Array mit den neuen Userdaten.";}}s:6:"return";a:2:{i:0;s:5:"array";i:1;s:8:"$arrMode";}}s:7:"content";a:2:{i:0;s:507:"		$arrMode = array();

		// Standard-Konfigurationen anwenden.
		$arrUpdate['pid'] = $this->storagePageId;
		$arrUpdate['crdate'] = $arrUpdate['tstamp'];
		$arrUpdate['usergroup'] = ($arrUpdate['usergroup']) ? $arrUpdate['usergroup'] : $this->getConfigurationByShowtype('usergroup');

		// Genehmigungstypen aufsteigend sortiert ermitteln. Das ist noetig um das Level dem ric
[...]
;
			$arrMode['params'] = array('autologin' => $this->getConfigurationByShowtype('autologin'));
		}

		return $arrMode;
	}

	";i:1;i:1;}s:12:"content_size";i:2810;s:13:"content_lines";i:61;s:6:"atLine";i:1129;}i:33;a:7:{s:6:"header";s:42:"function getRelationInserts(&$arrUpdate) {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:65:"

Ermittelt die neuen Relationen anhand des uebergebenen Arrays.
";s:5:"param";a:1:{i:0;a:2:{i:0;s:5:"array";i:1;s:96:"$arrUpdate // Call by reference: Das Array in dem die Anzahl der Relationen aktualisiert werden.";}}s:6:"return";a:2:{i:0;s:5:"array";i:1;s:11:"$arrInserts";}}s:7:"content";a:2:{i:0;s:507:"		$arrInserts = array();

		foreach (array_keys($arrUpdate) as $fieldName) {
			if (!is_array($this->feUsersTca['columns'][$fieldName])) {
				continue;
			}

			$fieldConfig = $this->feUsersTca['columns'][$fieldName]['config'];

			if (!$fieldConfig['MM'] || !($fieldConfig['type'] == 'select' || ($fieldConfig['type'] == 'group' && $fieldConfig['internal_type'] == 'db'))) 
[...]
ion = strripos($relation, '_')) ? substr($relation, $dividerPosition + 1) : $relation);
			}
		}

		return $arrInserts;
	}

	";i:1;i:1;}s:12:"content_size";i:795;s:13:"content_lines";i:27;s:6:"atLine";i:1197;}i:35;a:7:{s:6:"header";s:64:"function insertRelationInserts($userId, $arrInserts = array()) {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:79:"

Ersetzt die aktuellen Relationen mit den neuen hier uebergebenen Relationen.
";s:5:"param";a:2:{i:0;a:2:{i:0;s:5:"array";i:1;s:7:"$userId";}i:1;a:2:{i:0;s:5:"array";i:1;s:11:"$arrInserts";}}s:6:"return";a:2:{i:0;s:4:"void";i:1;s:0:"";}}s:7:"content";a:2:{i:0;s:582:"		foreach ($arrInserts as $foreignTable => $arrRelations) {
			$rows = array();

			$sorting = 1;

			foreach ($arrRelations as $relation) {
				if (intval($relation) <= 0) {
					continue;
				}

				$rows[] = array(
					'sorting' => $sorting,
					'uid_local' => intval($userId),
					'uid_foreign' => intval($relation)
				);

				$sorting++;
			}

			$GLOBALS['TYPO3_DB']->exec_DELETEquery($foreignTable, 'uid_local = ' . intval($userId));

			if (count($rows) > 0) {
				$GLOBALS['TYPO3_DB']->exec_INSERTmultipleRows($foreignTable, array_keys($rows[0]), $rows);
			}
		}
	}

	";i:1;i:0;}s:12:"content_size";i:582;s:13:"content_lines";i:27;s:6:"atLine";i:1232;}i:37;a:7:{s:6:"header";s:70:"function showOutputRedirect($mode, $submode = '', $params = array()) {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:174:"

Erledigt allen Output der nichts mit dem eigendlichen Formular zu tun hat.
Fuer besondere Faelle kann hier eine Ausnahme, oder zusaetzliche Konfigurationen gesetzt werden.
";s:5:"param";a:3:{i:0;a:2:{i:0;s:6:"string";i:1;s:5:"$mode";}i:1;a:2:{i:0;s:6:"string";i:1;s:8:"$submode";}i:2;a:2:{i:0;s:5:"array";i:1;s:7:"$params";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:6:"$label";}}s:7:"content";a:2:{i:0;s:507:"		$redirect = true;
		$autologin = false;

		$labelKey = $mode;
		$redirectKey = $mode;

		if ($submode) {
			$labelKey .= '_' . $submode;

			// Wenn für den Submode eine eigene Weiterleitungsseite definiert ist, diese benutzen!
			if ($this->conf['redirect.'][$redirectKey . '_' . $submode]) {
				$redirectKey .= '_' . $submode;
			}
		}

		// Label ermitteln
		$label = 
[...]
euser_utils::userRedirect($this->conf['redirect.'][$redirectKey], $this->getHiddenParamsArray());
		}

		return $label;
	}

	";i:1;i:1;}s:12:"content_size";i:3410;s:13:"content_lines";i:98;s:6:"atLine";i:1269;}i:39;a:7:{s:6:"header";s:42:"function sendActivationMail($userId = 0) {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:56:"

Sendet die Aktivierungsmail an den uebergebenen User.
";s:5:"param";a:1:{i:0;a:2:{i:0;s:7:"integer";i:1;s:7:"$userId";}}s:6:"return";a:2:{i:0;s:4:"void";i:1;s:0:"";}}s:7:"content";a:2:{i:0;s:507:"		$userId = intval($userId);

		if (!$userId) {
			$userId = $this->userId;
		}

		// Neuen Timestamp setzten, damit jede Aktivierungsmail einen anderen Hash hat.
		$GLOBALS['TYPO3_DB']->exec_UPDATEquery('fe_users', 'uid = ' . $userId, array('tstamp' => time()));

		// Userdaten ermitteln.
		$res = $GLOBALS['TYPO3_DB']->exec_SELECTquery('uid, tstamp, tx_datamintsfeuser_app
[...]
arkers);

		// Cookie fuer das erneute zusenden des Aktivierungslinks setzten.
		$this->setNotActivatedCookie($userId);
	}

	";i:1;i:1;}s:12:"content_size";i:2566;s:13:"content_lines";i:41;s:6:"atLine";i:1374;}i:41;a:7:{s:6:"header";s:28:"function doApprovalCheck() {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:89:"

Ueberprueft ob die Linkbestaetigung gueltig ist und aktiviert gegebenenfalls den User.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:0:"";}}s:7:"content";a:2:{i:0;s:507:"		// Userdaten ermitteln.
		$res = $GLOBALS['TYPO3_DB']->exec_SELECTquery('uid, tstamp, tx_datamintsfeuser_approval_level', 'fe_users', 'uid = ' . $this->userId . ' AND pid = ' . $this->storagePageId, '', '', '1');
		$row = $GLOBALS['TYPO3_DB']->sql_fetch_assoc($res);

		// Genehmigungstyp ermitteln um die richtige E-Mail zu senden, bzw. die richtige Ausgabe zu ermitteln.

[...]

			// Ausgabe vorbereiten.
			$submode = 'deleted';
		}

		return $this->showOutputRedirect($mode, $submode, $params);
	}

	";i:1;i:1;}s:12:"content_size";i:3464;s:13:"content_lines";i:71;s:6:"atLine";i:1421;}i:43;a:7:{s:6:"header";s:29:"function getApprovalTypes() {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:103:"

Ermittelt alle Genehmigungstypen.
Wird benoetigt um das Level dem richtigen Typ zuordnen zu koennen.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:5:"array";i:1;s:0:"";}}s:7:"content";a:2:{i:0;s:301:"		// Beispiel: approvalcheck = ,doubleoptin,adminapproval => Beim Exploden kommt dann ein leeres Arrayelement heraus, das nach dem entfernen einen leeren Platz uebrig laesst.
		return array_values(t3lib_div::trimExplode(',', $this->getConfigurationByShowtype(self::modeKeyApprovalcheck), true));
	}

	";i:1;i:0;}s:12:"content_size";i:301;s:13:"content_lines";i:4;s:6:"atLine";i:1499;}i:45;a:7:{s:6:"header";s:41:"function setNotActivatedCookie($userId) {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:90:"

Setzt einen Cookie fuer den neu angelegten Account, falls dieser aktiviert werden muss.
";s:5:"param";a:1:{i:0;a:2:{i:0;s:7:"integer";i:1;s:7:"$userId";}}s:6:"return";a:2:{i:0;s:4:"void";i:1;s:0:"";}}s:7:"content";a:2:{i:0;s:212:"		$arrNotActivated = $this->getNotActivatedUserArray();
		$arrNotActivated[] = intval($userId);

		setcookie($this->prefixId . '[not_activated]', implode(',', $arrNotActivated), time() + 60 * 60 * 24 * 30);
	}

	";i:1;i:0;}s:12:"content_size";i:212;s:13:"content_lines";i:6;s:6:"atLine";i:1510;}i:47;a:7:{s:6:"header";s:63:"function getNotActivatedUserArray($arrNotActivated = array()) {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:55:"

Ermittelt alle nicht aktivierten Accounts des Users.
";s:5:"param";a:1:{i:0;a:2:{i:0;s:5:"array";i:1;s:16:"$arrNotActivated";}}s:6:"return";a:2:{i:0;s:5:"array";i:1;s:23:"$arrNotActivatedCleaned";}}s:7:"content";a:2:{i:0;s:507:"		$arrNotActivatedCleaned = array();

		// Nicht aktivierte User ueber den Cookie ermitteln, und vor Missbrauch schuetzen.
		if (!$arrNotActivated) {
			$arrNotActivated = array_unique(array_map('intval', t3lib_div::trimExplode(',', $_COOKIE[$this->prefixId]['not_activated'], true)));
		}

		// Wenn nach dem reinigen noch User uebrig bleiben.
		if (count($arrNotActivated) 
[...]
DB']->sql_fetch_assoc($res)) {
				$arrNotActivatedCleaned[] = $row['uid'];
			}
		}

		return $arrNotActivatedCleaned;
	}

	";i:1;i:1;}s:12:"content_size";i:796;s:13:"content_lines";i:20;s:6:"atLine";i:1523;}i:49;a:7:{s:6:"header";s:114:"function sendMail($userId, $templatePart, $adminMail, $config, $extraMarkers = array(), $extraSuparts = array()) {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:100:"

Sendet die E-Mails mit dem uebergebenen Template und falls angegeben, auch mit den extra Markern.
";s:5:"param";a:6:{i:0;a:2:{i:0;s:7:"integer";i:1;s:7:"$userId";}i:1;a:2:{i:0;s:6:"string";i:1;s:13:"$templatePart";}i:2;a:2:{i:0;s:7:"boolean";i:1;s:10:"$adminMail";}i:3;a:2:{i:0;s:5:"array";i:1;s:7:"$config";}i:4;a:2:{i:0;s:5:"array";i:1;s:13:"$extraMarkers";}i:5;a:2:{i:0;s:5:"array";i:1;s:13:"$extraSuparts";}}s:6:"return";a:2:{i:0;s:4:"void";i:1;s:0:"";}}s:7:"content";a:2:{i:0;s:507:"		// Userdaten ermitteln.
		$res = $GLOBALS['TYPO3_DB']->exec_SELECTquery('*', 'fe_users', 'uid = ' . intval($userId), '', '', '1');
		$row = $GLOBALS['TYPO3_DB']->sql_fetch_assoc($res);

		$markerArray = array_merge((array)$config, (array)$row, (array)$extraMarkers);

		foreach ($markerArray as $key => $val) {
			$markerArray['label_' . $key] = $this->getLabel($key, false
[...]
g['mailtype'] == 'html') {
					$mail->setHTML($mail->encodeMsg($bodyHtml));
				}

				$mail->send($toEmail);
			}
		}
	}

	";i:1;i:1;}s:12:"content_size";i:3643;s:13:"content_lines";i:115;s:6:"atLine";i:1555;}i:51;a:7:{s:6:"header";s:37:"function isAdminMail($approvalType) {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:177:"

Ueberprueft anhand des Genehmigungstyps ob die Mail eine Adminmail oder eine Usermail ist. Wenn 'admin' im Namen des Genehmigungstyps steht, dann ist die Mail eine Adminmail.
";s:5:"param";a:1:{i:0;a:2:{i:0;s:6:"string";i:1;s:13:"$approvalType";}}s:6:"return";a:2:{i:0;s:7:"boolean";i:1;s:0:"";}}s:7:"content";a:2:{i:0;s:73:"		return (strpos($approvalType, 'admin') === false) ? false : true;
	}

	";i:1;i:0;}s:12:"content_size";i:73;s:13:"content_lines";i:3;s:6:"atLine";i:1677;}i:53;a:7:{s:6:"header";s:87:"function getTemplateSubpart($templatePart, $markerArray = array(), $config = array()) {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:74:"

Holt einen Subpart des Standardtemplates und ersetzt uebergeben Marker.
";s:5:"param";a:3:{i:0;a:2:{i:0;s:6:"string";i:1;s:13:"$templatePart";}i:1;a:2:{i:0;s:5:"array";i:1;s:12:"$markerArray";}i:2;a:2:{i:0;s:5:"array";i:1;s:7:"$config";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:9:"$template";}}s:7:"content";a:2:{i:0;s:325:"		// Template holen.
		$templateFile = $config['emailtemplate'];

		if (!$templateFile) {
			$templateFile = 'EXT:' . $this->extKey . '/res/datamints_feuser_mail.html';
		}

		// Template laden.
		$template = tx_datamintsfeuser_utils::getTemplateSubpart($templateFile, $templatePart, $markerArray);

		return $template;
	}

	";i:1;i:0;}s:12:"content_size";i:325;s:13:"content_lines";i:13;s:6:"atLine";i:1689;}i:55;a:7:{s:6:"header";s:50:"function getChangedForMail($arrNewData, $config) {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:72:"

Ermittlet alle geaenderten Daten und schreibt sie in ein Markerarray.
";s:5:"param";a:2:{i:0;a:2:{i:0;s:5:"array";i:1;s:11:"$arrNewData";}i:1;a:2:{i:0;s:5:"array";i:1;s:7:"$config";}}s:6:"return";a:2:{i:0;s:5:"array";i:1;s:13:"$extraMarkers";}}s:7:"content";a:2:{i:0;s:507:"		$count = 0;
		$template =  $this->getTemplateSubpart('changed_items', array(), $config);
		$extraMarkers = array();

		foreach ($this->arrUsedFields as $fieldName) {
			if ($arrNewData[$fieldName] != $GLOBALS['TSFE']->fe_user->user[$fieldName]) {
				$markerArray = array();
				$markerArray['label'] = $this->getLabel($fieldName, false);
				$markerArray['value_old'] = $G
[...]
 = '';
			}
		}

		if (!$count) {
			$extraMarkers['nothing_changed'] = 'nothing_changed';
		}

		return $extraMarkers;
	}

	";i:1;i:1;}s:12:"content_size";i:986;s:13:"content_lines";i:31;s:6:"atLine";i:1710;}i:57;a:7:{s:6:"header";s:31:"function getPasswordForMail() {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:176:"

Erstellt ein neues Passwort, falls Passwort generieren eingestellt ist. Das Passwort kannn dann ueber den Marker "###PASSWORD###" mit der Registrierungsmail gesendet werden.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:5:"array";i:1;s:13:"$extraMarkers";}}s:7:"content";a:2:{i:0;s:495:"		$extraMarkers = array();
		$generatePassword = $this->getConfigurationByShowtype('generatepassword.');

		if ($generatePassword['mode'] && $this->userId) {
			$password = tx_datamintsfeuser_utils::generatePassword($this->piVars[$this->contentId]['password'], $generatePassword);

			$extraMarkers['password'] = $password['normal'];

			$GLOBALS['TYPO3_DB']->exec_UPDATEquery('fe_users', 'uid = ' . $this->userId, array('password' => $password['encrypted']));
		}

		return $extraMarkers;
	}

	";i:1;i:0;}s:12:"content_size";i:495;s:13:"content_lines";i:14;s:6:"atLine";i:1747;}i:59;a:7:{s:6:"header";s:42:"function showForm($valueCheck = array()) {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:111:"

Gibt alle im Backend definierten Felder (TypoScipt/Flexform) formatiert und der Anzeigeart entsprechend aus.
";s:5:"param";a:1:{i:0;a:2:{i:0;s:5:"array";i:1;s:11:"$valueCheck";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:8:"$content";}}s:7:"content";a:2:{i:0;s:507:"		$arrCurrentData = array();

		// Beim editieren der Userdaten, die Felder vorausfuellen.
		if ($this->conf['showtype'] == self::showtypeKeyEdit) {
			$arrCurrentData = (array)$GLOBALS['TSFE']->fe_user->user;

			// ToDo: MM-Relation, Merge MM-Values erweitern.
			$arrCurrentData = $this->mergeRelationValues($arrCurrentData);
		}

		// Wenn das Formular schon einmal abges
[...]
ent .= $this->getHiddenParamsHiddenFields();

		$content .= '</fieldset>';
		$content .= '</form>';

		return $content;
	}

	";i:1;i:1;}s:12:"content_size";i:8919;s:13:"content_lines";i:207;s:6:"atLine";i:1768;}i:61;a:7:{s:6:"header";s:47:"function mergeRelationValues($arrCurrentData) {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:158:"

Ersetzt bei Feldern mit einer MM-Relation den Wert aus dem FE User Datensatz (Anzahl der Relationen) mit den eigentlichen IDs der verknuepften Datensaetze.
";s:5:"param";a:1:{i:0;a:2:{i:0;s:5:"array";i:1;s:15:"$arrCurrentData";}}s:6:"return";a:2:{i:0;s:5:"array";i:1;s:15:"$arrCurrentData";}}s:7:"content";a:2:{i:0;s:507:"		foreach ($this->arrUsedFields as $fieldName) {
			if (!is_array($this->feUsersTca['columns'][$fieldName])) {
				continue;
			}

			$fieldConfig = $this->feUsersTca['columns'][$fieldName]['config'];

			if (!$fieldConfig['MM'] || !($fieldConfig['type'] == 'select' || ($fieldConfig['type'] == 'group' && $fieldConfig['internal_type'] == 'db'))) {
				continue;
			}

			$op
[...]
]->sql_fetch_assoc($res)) {
					$arrCurrentData[$fieldName][] = $row['uid'];
				}
			}
		}

		return $arrCurrentData;
	}

	";i:1;i:1;}s:12:"content_size";i:1645;s:13:"content_lines";i:44;s:6:"atLine";i:1982;}i:63;a:7:{s:6:"header";s:119:"function showInput($fieldName, $fieldConfig, $arrCurrentData, $disabledField = '', $valueCheck = array(), $iItem = 0) {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:23:"

Rendert Inputfelder.
";s:5:"param";a:6:{i:0;a:2:{i:0;s:6:"string";i:1;s:10:"$fieldName";}i:1;a:2:{i:0;s:5:"array";i:1;s:12:"$fieldConfig";}i:2;a:2:{i:0;s:5:"array";i:1;s:15:"$arrCurrentData";}i:3;a:2:{i:0;s:6:"string";i:1;s:14:"$disabledField";}i:4;a:2:{i:0;s:5:"array";i:1;s:11:"$valueCheck";}i:5;a:2:{i:0;s:3:"int";i:1;s:6:"$iItem";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:8:"$content";}}s:7:"content";a:2:{i:0;s:507:"		$content = '';
		$additionalAttributes = '';

		$arrFieldConfigEval = t3lib_div::trimExplode(',', $fieldConfig['eval'], true);

		// Datumsfeld und Datumzeitfeld.
		if (in_array('date', $arrFieldConfigEval) || in_array('datetime', $arrFieldConfigEval)) {
			// Vom User ausgefuellten Wert vorbelegen, da bei einem Fehler im Formular das Datum nicht in einen Timestamp zurue
[...]
' . $disabledField . ' id="' . $this->getFieldId($fieldName) . '"' . $additionalAttributes . ' />';

		return $content;
	}

	";i:1;i:1;}s:12:"content_size";i:2409;s:13:"content_lines";i:46;s:6:"atLine";i:2038;}i:65;a:7:{s:6:"header";s:83:"function showText($fieldName, $fieldConfig, $arrCurrentData, $disabledField = '') {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:21:"

Rendert Textareas.
";s:5:"param";a:4:{i:0;a:2:{i:0;s:6:"string";i:1;s:10:"$fieldName";}i:1;a:2:{i:0;s:5:"array";i:1;s:12:"$fieldConfig";}i:2;a:2:{i:0;s:5:"array";i:1;s:15:"$arrCurrentData";}i:3;a:2:{i:0;s:6:"string";i:1;s:14:"$disabledField";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:8:"$content";}}s:7:"content";a:2:{i:0;s:248:"		$content = '';

		$content .= '<textarea name="' . $this->getFieldName($fieldName) . '" rows="2" cols="42"' . $disabledField . ' id="' . $this->getFieldId($fieldName) . '">' . $arrCurrentData[$fieldName] . '</textarea>';

		return $content;
	}

	";i:1;i:0;}s:12:"content_size";i:248;s:13:"content_lines";i:7;s:6:"atLine";i:2094;}i:67;a:7:{s:6:"header";s:84:"function showCheck($fieldName, $fieldConfig, $arrCurrentData, $disabledField = '') {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:22:"

Rendert Checkboxen.
";s:5:"param";a:4:{i:0;a:2:{i:0;s:6:"string";i:1;s:10:"$fieldName";}i:1;a:2:{i:0;s:5:"array";i:1;s:12:"$fieldConfig";}i:2;a:2:{i:0;s:5:"array";i:1;s:15:"$arrCurrentData";}i:3;a:2:{i:0;s:6:"string";i:1;s:14:"$disabledField";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:8:"$content";}}s:7:"content";a:2:{i:0;s:507:"		$content = '';
		$checkItemsCount = count($fieldConfig['items']);

		if ($checkItemsCount > 1) {
			$checkItems = array_values($fieldConfig['items']);

			// Moeglichkeit das der gespeicherte Wert eine Bitmap ist, daher aufsplitten in ein Array, wie es auch von einem abgesendeten Formular kommen wuerde.
			if (!is_array($arrCurrentData[$fieldName])) {
				$arrCurrentData
[...]
. '" value="1"' . $checked . $disabledField . ' id="' . $this->getFieldId($fieldName) . '" />';
		}

		return $content;
	}

	";i:1;i:1;}s:12:"content_size";i:1843;s:13:"content_lines";i:44;s:6:"atLine";i:2111;}i:69;a:7:{s:6:"header";s:84:"function showRadio($fieldName, $fieldConfig, $arrCurrentData, $disabledField = '') {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:24:"

Rendert Radiobuttons.
";s:5:"param";a:4:{i:0;a:2:{i:0;s:6:"string";i:1;s:10:"$fieldName";}i:1;a:2:{i:0;s:5:"array";i:1;s:12:"$fieldConfig";}i:2;a:2:{i:0;s:5:"array";i:1;s:15:"$arrCurrentData";}i:3;a:2:{i:0;s:6:"string";i:1;s:14:"$disabledField";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:8:"$content";}}s:7:"content";a:2:{i:0;s:507:"		$content = '';
		$radioItems = array_values($fieldConfig['items']);

		$content .= '<div class="list">';

		$i = 1;

		for ($key = 0; $key < count($fieldConfig['items']); $key++) {
			$value = $radioItems[$key][1];
			$checked = ($arrCurrentData[$fieldName] == $value) ? ' checked="checked"' : '';

			$content .= '<div id="' . $this->getFieldId($fieldName, 'item', $i, 'wr
[...]
 false);
			$content .= '</label>';
			$content .= '</div>';

			$i++;
		}

		$content .= '</div>';

		return $content;
	}

	";i:1;i:1;}s:12:"content_size";i:878;s:13:"content_lines";i:26;s:6:"atLine";i:2165;}i:71;a:7:{s:6:"header";s:85:"function showSelect($fieldName, $fieldConfig, $arrCurrentData, $disabledField = '') {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:24:"

Rendert Selectfelder.
";s:5:"param";a:4:{i:0;a:2:{i:0;s:6:"string";i:1;s:10:"$fieldName";}i:1;a:2:{i:0;s:5:"array";i:1;s:12:"$fieldConfig";}i:2;a:2:{i:0;s:5:"array";i:1;s:15:"$arrCurrentData";}i:3;a:2:{i:0;s:6:"string";i:1;s:14:"$disabledField";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:8:"$content";}}s:7:"content";a:2:{i:0;s:507:"		$content = '';
		$optionlist = '';

		// Moeglichkeit das der gespeicherte Wert eine kommseparierte Liste ist, daher aufsplitten in ein Array, wie es auch von einem abgesendeten Formular kommen wuerde.
		if (!is_array($arrCurrentData[$fieldName])) {
			$arrCurrentData[$fieldName] = t3lib_div::trimExplode(',', $arrCurrentData[$fieldName], true);
		}

		// Beim Typ Select 
[...]
. $this->getFieldId($fieldName) . '">';
			$content .= $optionlist;
			$content .= '</select>';
		}

		return $content;
	}

	";i:1;i:1;}s:12:"content_size";i:4357;s:13:"content_lines";i:88;s:6:"atLine";i:2201;}i:73;a:7:{s:6:"header";s:84:"function showGroup($fieldName, $fieldConfig, $arrCurrentData, $disabledField = '') {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:60:"

Rendert Groupfelder (z.B. Dateien oder externe Tabellen).
";s:5:"param";a:4:{i:0;a:2:{i:0;s:6:"string";i:1;s:10:"$fieldName";}i:1;a:2:{i:0;s:5:"array";i:1;s:12:"$fieldConfig";}i:2;a:2:{i:0;s:5:"array";i:1;s:15:"$arrCurrentData";}i:3;a:2:{i:0;s:6:"string";i:1;s:14:"$disabledField";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:8:"$content";}}s:7:"content";a:2:{i:0;s:507:"		$content = '';

		// Wenn es sich um den "internal_type" FILE handelt && es ein Bild ist, dann ein Vorschaubild erstellen und ein File-Inputfeld anzeigen.
		if ($fieldConfig['internal_type'] == 'file') {
			// Verzeichniss ermitteln.
			$uploadFolder = tx_datamintsfeuser_utils::fixPath($fieldConfig['uploadfolder']);

			$arrCurrentFieldData = t3lib_div::trimExplode(',', 
[...]
 '">'. $label . '</label>';
				$content .= '</div>';

				$i++;
			}

			$content .= '</div>';
		}

		return $content;
	}

	";i:1;i:1;}s:12:"content_size";i:4230;s:13:"content_lines";i:106;s:6:"atLine";i:2299;}i:75;a:7:{s:6:"header";s:55:"function showCaptcha($fieldName, $valueCheck, $iItem) {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:23:"

Rendert ein Captcha.
";s:5:"param";a:3:{i:0;a:2:{i:0;s:6:"string";i:1;s:10:"$fieldName";}i:1;a:2:{i:0;s:5:"array";i:1;s:11:"$valueCheck";}i:2;a:2:{i:0;s:3:"int";i:1;s:6:"$iItem";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:8:"$content";}}s:7:"content";a:2:{i:0;s:507:"		$content = '';
		$captcha = '';
//		$showInput = true;

		if (!t3lib_extMgm::isLoaded($this->conf['captcha.']['use'])) {
			return $content;
		}

		switch ($this->conf['captcha.']['use']) {

			case 'captcha':
				$captcha = '<img src="' . tx_datamintsfeuser_utils::getTypoLinkUrl(t3lib_extMgm::siteRelPath($this->conf['captcha.']['use']) . 'captcha/captcha.php') . '" alt=
[...]
. '" />' : '';
		$content .= $this->getErrorLabel($fieldName, $valueCheck);
		$content .= '</div>';

		return $content;
	}

	";i:1;i:1;}s:12:"content_size";i:2070;s:13:"content_lines";i:62;s:6:"atLine";i:2414;}i:77;a:7:{s:6:"header";s:23:"function getFieldId() {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:46:"

Ermittelt die ID fuer das uebergebene Feld.
";s:5:"param";a:1:{i:0;a:2:{i:0;s:6:"string";i:1;s:3:"...";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:0:"";}}s:7:"content";a:2:{i:0;s:333:"		if (!func_num_args()) {
			return '';
		}

		$arrParts = array(
			$this->extKey,
			$this->contentId
		);

		// Darf nicht als Methoden-Parameter uebergeben werden, da das vor PHP 5.3 fuer diese Methode nicht unterstuetzt wurde!
		$arrFuncArgs = func_get_args();

		return implode('_', array_merge($arrParts, $arrFuncArgs));
	}

	";i:1;i:0;}s:12:"content_size";i:333;s:13:"content_lines";i:15;s:6:"atLine";i:2483;}i:79;a:7:{s:6:"header";s:86:"function getFieldClasses($iItem, $fieldName, $fieldType = '', $valueCheck = array()) {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:53:"

Liefert die Klassen für den Feld-Wrapper zurück.
";s:5:"param";a:4:{i:0;a:2:{i:0;s:3:"int";i:1;s:6:"$iItem";}i:1;a:2:{i:0;s:6:"string";i:1;s:10:"$fieldName";}i:2;a:2:{i:0;s:6:"string";i:1;s:10:"$fieldType";}i:3;a:2:{i:0;s:5:"array";i:1;s:11:"$valueCheck";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:0:"";}}s:7:"content";a:2:{i:0;s:332:"		$arrParts = array(
			'item',
			'item-' . $iItem,
			'name-' . $fieldName,
			($fieldType ? 'type-' . $fieldType : ''),
			($this->isRequiredField($fieldName) ? 'required' : ''),
			($valueCheck ? trim($this->getErrorClass($fieldName, $valueCheck)) : ''),
			'clearfix'
		);

		return implode(' ', array_filter($arrParts));
	}

	";i:1;i:0;}s:12:"content_size";i:332;s:13:"content_lines";i:13;s:6:"atLine";i:2508;}i:81;a:7:{s:6:"header";s:25:"function getFieldName() {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:49:"

Ermittelt den Namen fuer das uebergebene Feld.
";s:5:"param";a:1:{i:0;a:2:{i:0;s:6:"string";i:1;s:3:"...";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:0:"";}}s:7:"content";a:2:{i:0;s:373:"		if (!func_num_args()) {
			return '';
		}

		$arrParts = array(
			$this->prefixId,
			$this->contentId
		);

		// Darf nicht als Methoden-Parameter uebergeben werden, da das vor PHP 5.3 fuer diese Methode nicht unterstuetzt wurde!
		$arrFuncArgs = func_get_args();

		return array_shift($arrParts) . '[' . implode('][', array_merge($arrParts, $arrFuncArgs)) . ']';
	}

	";i:1;i:0;}s:12:"content_size";i:373;s:13:"content_lines";i:15;s:6:"atLine";i:2528;}i:83;a:7:{s:6:"header";s:54:"function getLabel($fieldName, $checkRequired = true) {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:186:"

Ermittelt ein bestimmtes Label aufgrund des im TCA gespeicherten Languagestrings, des Datenbankfeldnamens oder gibt einfach den uebergeben Wert wieder aus, wenn nichts gefunden wurde.
";s:5:"param";a:2:{i:0;a:2:{i:0;s:6:"string";i:1;s:28:"$fieldName / $languageString";}i:1;a:2:{i:0;s:7:"boolean";i:1;s:14:"$checkRequired";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:0:"";}}s:7:"content";a:2:{i:0;s:507:"		if (strpos($fieldName, 'LLL:') === false) {
			// Label aus der Konfiguration holen basierend auf dem Datenbankfeldnamen.
			$label = $this->pi_getLL($fieldName);

			// Das Label zurueckliefern, falls vorhanden.
			if ($label) {
				return $label . (($checkRequired) ? $this->isRequiredField($fieldName) : '');
			}

			// LanguageString ermitteln.
			$languageString = $t
[...]
gebenen Wert wieder zurueckliefern.
		return $fieldName . (($checkRequired) ? $this->isRequiredField($fieldName) : '');
	}

	";i:1;i:1;}s:12:"content_size";i:1210;s:13:"content_lines";i:35;s:6:"atLine";i:2551;}i:85;a:7:{s:6:"header";s:48:"function getErrorType($fieldName, $valueCheck) {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:45:"

Ermittelt den Fehlertyp aus dem Feldnamen.
";s:5:"param";a:2:{i:0;a:2:{i:0;s:6:"string";i:1;s:10:"$fieldName";}i:1;a:2:{i:0;s:5:"array";i:1;s:11:"$valueCheck";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:5:"$type";}}s:7:"content";a:2:{i:0;s:166:"		$type = '';

		if (array_key_exists($fieldName, $valueCheck) && is_string($valueCheck[$fieldName])) {
			$type = $valueCheck[$fieldName];
		}

		return $type;
	}

	";i:1;i:0;}s:12:"content_size";i:166;s:13:"content_lines";i:9;s:6:"atLine";i:2594;}i:87;a:7:{s:6:"header";s:49:"function getErrorClass($fieldName, $valueCheck) {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:48:"

Ermittelt die Fehlerklasse aus dem Feldnamen.
";s:5:"param";a:2:{i:0;a:2:{i:0;s:6:"string";i:1;s:10:"$fieldName";}i:1;a:2:{i:0;s:5:"array";i:1;s:11:"$valueCheck";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:6:"$class";}}s:7:"content";a:2:{i:0;s:188:"		$class = '';

		// Extra Error Label ermitteln.
		if (($errorType = $this->getErrorType($fieldName, $valueCheck))) {
			$class = ' error error-' . $errorType;
		}

		return $class;
	}

	";i:1;i:0;}s:12:"content_size";i:188;s:13:"content_lines";i:10;s:6:"atLine";i:2611;}i:89;a:7:{s:6:"header";s:49:"function getErrorLabel($fieldName, $valueCheck) {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:47:"

Ermittelt das Fehlerlabel aus dem Feldnamen.
";s:5:"param";a:2:{i:0;a:2:{i:0;s:6:"string";i:1;s:10:"$fieldName";}i:1;a:2:{i:0;s:5:"array";i:1;s:11:"$valueCheck";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:6:"$label";}}s:7:"content";a:2:{i:0;s:285:"		$label = '';

		// Extra Error Label ermitteln.
		if (($errorType = $this->getErrorType($fieldName, $valueCheck))) {
			$label = '<div class="error-label error-' . $fieldName . '">' . $this->getLabel($fieldName . '_error_' . $errorType, false) . '</div>';
		}

		return $label;
	}

	";i:1;i:0;}s:12:"content_size";i:285;s:13:"content_lines";i:10;s:6:"atLine";i:2629;}i:91;a:7:{s:6:"header";s:38:"function isRequiredField($fieldName) {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:82:"

Ueberprueft ob das uebergebene Feld benoetigt wird um erfolgreich zu speichern.
";s:5:"param";a:1:{i:0;a:2:{i:0;s:6:"string";i:1;s:10:"$fieldName";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:0:"";}}s:7:"content";a:2:{i:0;s:203:"		if (array_intersect(array($fieldName, tx_datamintsfeuser_utils::getSpecialFieldKey($fieldName)), $this->arrRequiredFields)) {
			return '<span class="star">*</span>';
		} else {
			return '';
		}
	}

	";i:1;i:0;}s:12:"content_size";i:203;s:13:"content_lines";i:7;s:6:"atLine";i:2646;}i:93;a:7:{s:6:"header";s:41:"function getTableLabelFieldName($table) {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:175:"

Ueberprüft ob es für die uebergebene Tabelle eine andere Labelkonfiguration gibt.
Dieses LabelField wird dann benutzt, um für Listen Elmente das richtige Label zu holen.
";s:5:"param";a:1:{i:0;a:2:{i:0;s:6:"string";i:1;s:6:"$table";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:15:"$labelFieldName";}}s:7:"content";a:2:{i:0;s:210:"		$labelFieldName = $GLOBALS['TCA'][$table]['ctrl']['label'];

		if ($this->conf['tablelabelfield.'][$table]) {
			$labelFieldName = $this->conf['tablelabelfield.'][$table];
		}

		return $labelFieldName;
	}

	";i:1;i:0;}s:12:"content_size";i:210;s:13:"content_lines";i:9;s:6:"atLine";i:2661;}i:95;a:7:{s:6:"header";s:33:"function getHiddenParamsArray() {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:77:"

Erstellt GET-Parameter fuer vordefinierte Parameter die uebergeben wurden.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:5:"array";i:1;s:10:"$arrParams";}}s:7:"content";a:2:{i:0;s:265:"		$arrParams = array();

		foreach ($this->arrHiddenParams as $paramName) {
			$arrParamNameParts = t3lib_div::trimExplode('|', $paramName, true);

			$this->getParamArrayFromParamNameParts($arrParamNameParts, $_REQUEST, $arrParams);
		}

		return $arrParams;
	}

	";i:1;i:0;}s:12:"content_size";i:265;s:13:"content_lines";i:11;s:6:"atLine";i:2676;}i:97;a:7:{s:6:"header";s:40:"function getHiddenParamsHiddenFields() {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:77:"

Erstellt Hidden Fields fuer vordefinierte Parameter die uebergeben wurden.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:8:"$content";}}s:7:"content";a:2:{i:0;s:507:"		$content = '';

		foreach ($this->arrHiddenParams as $paramName) {
			$arrParams = array();
			$arrParamNameParts = t3lib_div::trimExplode('|', $paramName, true);

			$this->getParamArrayFromParamNameParts($arrParamNameParts, $_REQUEST, $arrParams);

			// Durchlaeuft das gesaeberte Array anhand der Pfad-Teile.
			while (count($arrParamNameParts) > 0) {
				$paramNamePar
[...]
aramNamePart]) . '" />';

					break;
				}

				$arrParams = &$arrParams[$paramNamePart];
			}
		}

		return $content;
	}

	";i:1;i:1;}s:12:"content_size";i:1129;s:13:"content_lines";i:39;s:6:"atLine";i:2693;}i:99;a:7:{s:6:"header";s:89:"function getParamArrayFromParamNameParts($arrParamNameParts, &$arrRequest, &$arrParams) {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:306:"

Durchsucht ein mehrdimensionales Array mit dem uebergebenen Pfad-Array, und uebernimmt den gefundenen Wert gesaubert in ein neues mehrdimensionales Array.
Das Pfad-Array ist ein eindimensinales Array, dessen fortlaufende Werte die jeweilige Ebene im durchsuchten und geschriebenen Array repraesentieren!
";s:5:"param";a:3:{i:0;a:2:{i:0;s:5:"array";i:1;s:18:"$arrParamNameParts";}i:1;a:2:{i:0;s:5:"array";i:1;s:64:"$arrRequest // Call by reference: Das Array in dem gesucht wird.";}i:2;a:2:{i:0;s:5:"array";i:1;s:91:"$arrParams // Call by reference: Das Array in das der Pfad und der Wert geschrieben werden.";}}s:6:"return";a:2:{i:0;s:4:"void";i:1;s:0:"";}}s:7:"content";a:2:{i:0;s:507:"		while (count($arrParamNameParts) > 0) {
			$paramNamePart = array_shift($arrParamNameParts);

			// Abbrechen wenn der aktuelle Pfad-Teil nicht uebergeben wurde.
			if (!isset($arrRequest[$paramNamePart])) {
				break;
			}

			// Wenn der letzte Pfad-Teil erreicht ist, diesen uebertragen und saubern.
			if (!$arrParamNameParts) {
				$arrParams[$paramNamePart] = htmlspe
[...]
arams = &$arrParams[$paramNamePart];
				$arrRequest = &$arrRequest[$paramNamePart];

				continue;
			}

			break;
		}
	}

	";i:1;i:1;}s:12:"content_size";i:854;s:13:"content_lines";i:31;s:6:"atLine";i:2742;}i:101;a:7:{s:6:"header";s:35:"function determineConfiguration() {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:5:{s:4:"text";s:123:"

Holt Konfigurationen aus der Flexform (Tab-bedingt) und ersetzt diese pro Konfiguration in der TypoScript Konfiguration.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:4:"void";i:1;s:0:"";}s:5:"other";a:6:{i:0;s:19:"@global	$this->conf";i:1;s:22:"@global	$this->extConf";i:2;s:28:"@global	$this->arrUsedFields";i:3;s:30:"@global	$this->arrUniqueFields";i:4;s:32:"@global	$this->arrRequiredFields";i:5;s:30:"@global	$this->arrHiddenParams";}s:11:"other_index";a:1:{s:7:"@global";a:6:{i:0;s:12:"$this->conf ";i:1;s:15:"$this->extConf ";i:2;s:21:"$this->arrUsedFields ";i:3;s:23:"$this->arrUniqueFields ";i:4;s:25:"$this->arrRequiredFields ";i:5;s:23:"$this->arrHiddenParams ";}}}s:7:"content";a:2:{i:0;s:507:"		$flexConf = array();

		// Extension Konfiguration ermitteln.
		$this->extConf = unserialize($GLOBALS['TYPO3_CONF_VARS']['EXT']['extConf'][$this->extKey]);

		// Alle Tabs der Flexformkonfiguration durchgehn.
		if (is_array($this->cObj->data['pi_flexform']['data'])) {
			foreach ($this->cObj->data['pi_flexform']['data'] as $tabKey => $_) {
				$flexConf = tx_datamintsfeu
[...]
		$this->arrRequiredFields[] = tx_datamintsfeuser_utils::getSpecialFieldKey(self::specialfieldKeyPasswordconfirmation);
	}

	";i:1;i:1;}s:12:"content_size";i:1935;s:13:"content_lines";i:39;s:6:"atLine";i:2785;}i:103;a:7:{s:6:"header";s:39:"function determineIrreConfiguration() {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:5:{s:4:"text";s:128:"

Ueberschreibt eventuell vorhandene TypoScript Konfigurationen oder Flexform Konfigurationen mit den Konfigurationen aus IRRE.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:4:"void";i:1;s:0:"";}s:5:"other";a:1:{i:0;s:19:"@global	$this->conf";}s:11:"other_index";a:1:{s:7:"@global";a:1:{i:0;s:12:"$this->conf ";}}}s:7:"content";a:2:{i:0;s:507:"		if (!is_array($this->conf['databasefields'])) {
			return;
		}

		$infoitems = 1;
		$fieldsets = 2;
		$userdeleteCounter = 0;
		$passwordconfirmationCounter = 0;
		$resendactivationCounter = 0;
		$captchaCounter = 0;
		$usedfields = array();
		$requiredfields = array();
		$uniquefields = array();

		$firstkey = key($this->conf['databasefields']);

		foreach ($this->conf[
[...]
s->conf['uniquefields'] = implode(',', $uniquefields);
		$this->conf['requiredfields'] = implode(',', $requiredfields);
	}

	";i:1;i:1;}s:12:"content_size";i:5115;s:13:"content_lines";i:145;s:6:"atLine";i:2831;}i:105;a:4:{s:6:"header";s:54:"function getConfigurationByShowtype($subConfig = '') {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:94:"

Ermittelt die komplette oder die uebergebene Unter-Konfiguration des aktuellen Anzeigetyps.
";s:5:"param";a:1:{i:0;a:2:{i:0;s:6:"string";i:1;s:10:"$subConfig";}}s:6:"return";a:2:{i:0;s:5:"array";i:1;s:0:"";}}s:6:"atLine";i:2983;}i:107;a:7:{s:6:"header";s:41:"function getJSValidationConfiguration() {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:96:"

Gibt die komplette Validierungskonfiguration fuer die JavaScript Frontendvalidierung zurueck.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:14:"$configuration";}}s:7:"content";a:2:{i:0;s:507:"		// Hier eine fertig generierte Konfiguration:
		// datamints_feuser_config[11]=[];
		// datamints_feuser_config[11]["username"]=[];
		// datamints_feuser_config[11]["username"]["validation"]=[];
		// datamints_feuser_config[11]["username"]["validation"]["type"]="username";
		// datamints_feuser_config[11]["username"]["valid"]="Der Benutzername darf keine Leerzeichen bein
[...]
)	{
	include_once($TYPO3_CONF_VARS[TYPO3_MODE]['XCLASS']['ext/datamints_feuser/pi1/class.tx_datamintsfeuser_pi1.php']);
}

?>";i:1;i:1;}s:12:"content_size";i:6766;s:13:"content_lines";i:123;s:6:"atLine";i:2996;}}s:10:"usageCount";a:54:{s:12:"H_6670368143";a:2:{s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:51:"class tx_datamintsfeuser_pi1 extends tslib_pibase {";}s:12:"H_12a661a898";a:2:{s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:32:"function main($content, $conf) {";}s:12:"H_6fb52dabec";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:25:"function doFormSubmit() {";}s:12:"H_a5a960e598";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:23:"function checkValid() {";}s:12:"H_adea67497a";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:24:"function checkUnique() {";}s:12:"H_5813d30169";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:26:"function checkRequired() {";}s:12:"H_d5c042e89e";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:31:"function checkCaptcha($value) {";}s:12:"H_ec526ff56d";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:68:"function cleanPasswordField(&$arrUpdate, $fieldName, $fieldConfig) {";}s:12:"H_ae30480e79";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:65:"function cleanCheckField(&$arrUpdate, $fieldName, $fieldConfig) {";}s:12:"H_6e2475a321";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:74:"function cleanMultipleSelectField(&$arrUpdate, $fieldName, $fieldConfig) {";}s:12:"H_3929c03de8";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:73:"function cleanGroupDatabaseField(&$arrUpdate, $fieldName, $fieldConfig) {";}s:12:"H_346b3bb24f";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:69:"function cleanUncleanedField(&$arrUpdate, $fieldName, $fieldConfig) {";}s:12:"H_b01ea3581c";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:65:"function saveDeleteFiles(&$arrUpdate, $fieldName, $fieldConfig) {";}s:12:"H_8c0c2ec020";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:34:"function copyFields(&$arrUpdate) {";}s:12:"H_84c6a01605";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:34:"function doUserEdit(&$arrUpdate) {";}s:12:"H_72e2b31e5a";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:38:"function doUserRegister(&$arrUpdate) {";}s:12:"H_b2ab286e8a";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:2;s:5:"TOTAL";i:2;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:2;s:5:"TOTAL";i:2;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:42:"function getRelationInserts(&$arrUpdate) {";}s:12:"H_1f08c867c5";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:2;s:5:"TOTAL";i:2;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:2;s:5:"TOTAL";i:2;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:64:"function insertRelationInserts($userId, $arrInserts = array()) {";}s:12:"H_b504212879";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:7;s:5:"TOTAL";i:7;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:7;s:5:"TOTAL";i:7;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:70:"function showOutputRedirect($mode, $submode = '', $params = array()) {";}s:12:"H_70f1f3874e";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:3;s:5:"TOTAL";i:3;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:3;s:5:"TOTAL";i:3;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:42:"function sendActivationMail($userId = 0) {";}s:12:"H_dd04af31a9";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:28:"function doApprovalCheck() {";}s:12:"H_fcef8d1a47";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:4;s:5:"TOTAL";i:4;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:4;s:5:"TOTAL";i:4;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:29:"function getApprovalTypes() {";}s:12:"H_6a64dddd97";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:41:"function setNotActivatedCookie($userId) {";}s:12:"H_9d84f4fc50";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:3;s:5:"TOTAL";i:3;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:3;s:5:"TOTAL";i:3;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:63:"function getNotActivatedUserArray($arrNotActivated = array()) {";}s:12:"H_c1ed18eee0";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:8;s:5:"TOTAL";i:8;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:8;s:5:"TOTAL";i:8;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:114:"function sendMail($userId, $templatePart, $adminMail, $config, $extraMarkers = array(), $extraSuparts = array()) {";}s:12:"H_006a316cc0";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:3;s:5:"TOTAL";i:3;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:3;s:5:"TOTAL";i:3;}s:24:"_searchtime_milliseconds";d:0;s:15:"_functionHeader";s:37:"function isAdminMail($approvalType) {";}s:12:"H_d44e3c5cd0";a:4:{s:3:"ALL";a:3:{s:11:"objectUsage";i:5;s:5:"TOTAL";i:6;s:14:"nonObjectUsage";i:1;}s:14:"MD5_8f66ccd171";a:4:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:5;s:5:"TOTAL";i:6;s:14:"nonObjectUsage";i:1;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:87:"function getTemplateSubpart($templatePart, $markerArray = array(), $config = array()) {";}s:12:"H_28c1e00aca";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:50:"function getChangedForMail($arrNewData, $config) {";}s:12:"H_f30851039b";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:2;s:5:"TOTAL";i:2;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:2;s:5:"TOTAL";i:2;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:31:"function getPasswordForMail() {";}s:12:"H_14be5b66fd";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:3;s:5:"TOTAL";i:3;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:3;s:5:"TOTAL";i:3;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:42:"function showForm($valueCheck = array()) {";}s:12:"H_691e41dcd4";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:47:"function mergeRelationValues($arrCurrentData) {";}s:12:"H_0ed336cc20";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:119:"function showInput($fieldName, $fieldConfig, $arrCurrentData, $disabledField = '', $valueCheck = array(), $iItem = 0) {";}s:12:"H_e88bde8500";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:83:"function showText($fieldName, $fieldConfig, $arrCurrentData, $disabledField = '') {";}s:12:"H_860d76abf9";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:84:"function showCheck($fieldName, $fieldConfig, $arrCurrentData, $disabledField = '') {";}s:12:"H_3b8f4833dc";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:84:"function showRadio($fieldName, $fieldConfig, $arrCurrentData, $disabledField = '') {";}s:12:"H_a3de57b1bb";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:85:"function showSelect($fieldName, $fieldConfig, $arrCurrentData, $disabledField = '') {";}s:12:"H_c274f4a8d1";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:84:"function showGroup($fieldName, $fieldConfig, $arrCurrentData, $disabledField = '') {";}s:12:"H_5c70df29ac";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:55:"function showCaptcha($fieldName, $valueCheck, $iItem) {";}s:12:"H_5c68f8bb4c";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:52;s:5:"TOTAL";i:52;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:52;s:5:"TOTAL";i:52;}s:24:"_searchtime_milliseconds";d:2;s:15:"_functionHeader";s:23:"function getFieldId() {";}s:12:"H_39d28204e0";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:9;s:5:"TOTAL";i:9;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:9;s:5:"TOTAL";i:9;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:86:"function getFieldClasses($iItem, $fieldName, $fieldType = '', $valueCheck = array()) {";}s:12:"H_ea87d3f504";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:28;s:5:"TOTAL";i:28;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:28;s:5:"TOTAL";i:28;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:25:"function getFieldName() {";}s:12:"H_e9ee116d9b";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:21;s:5:"TOTAL";i:21;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:21;s:5:"TOTAL";i:21;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:54:"function getLabel($fieldName, $checkRequired = true) {";}s:12:"H_63e3fdb523";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:2;s:5:"TOTAL";i:2;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:2;s:5:"TOTAL";i:2;}s:24:"_searchtime_milliseconds";d:0;s:15:"_functionHeader";s:48:"function getErrorType($fieldName, $valueCheck) {";}s:12:"H_53ef518baa";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:0;s:15:"_functionHeader";s:49:"function getErrorClass($fieldName, $valueCheck) {";}s:12:"H_8d24a6b0ba";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:5;s:5:"TOTAL";i:5;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:5;s:5:"TOTAL";i:5;}s:24:"_searchtime_milliseconds";d:0;s:15:"_functionHeader";s:49:"function getErrorLabel($fieldName, $valueCheck) {";}s:12:"H_ecaa508441";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:6;s:5:"TOTAL";i:6;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:6;s:5:"TOTAL";i:6;}s:24:"_searchtime_milliseconds";d:0;s:15:"_functionHeader";s:38:"function isRequiredField($fieldName) {";}s:12:"H_a476c47b7a";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:2;s:5:"TOTAL";i:2;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:2;s:5:"TOTAL";i:2;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:41:"function getTableLabelFieldName($table) {";}s:12:"H_3245c77da3";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:4;s:5:"TOTAL";i:4;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:4;s:5:"TOTAL";i:4;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:33:"function getHiddenParamsArray() {";}s:12:"H_e812c94d42";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:40:"function getHiddenParamsHiddenFields() {";}s:12:"H_7a9335b478";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:2;s:5:"TOTAL";i:2;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:2;s:5:"TOTAL";i:2;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:89:"function getParamArrayFromParamNameParts($arrParamNameParts, &$arrRequest, &$arrParams) {";}s:12:"H_f1d549e22e";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:35:"function determineConfiguration() {";}s:12:"H_28dcc39a0b";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:39:"function determineIrreConfiguration() {";}s:12:"H_a691737f4a";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:28;s:5:"TOTAL";i:28;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:28;s:5:"TOTAL";i:28;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:54:"function getConfigurationByShowtype($subConfig = '') {";}s:12:"H_ca61886d00";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:41:"function getJSValidationConfiguration() {";}}}}}